#%RAML 0.8
title: Document
version: v0.1
mediaType: application/json
baseUri: https://api.yaas.io/hybris/document/v1
schemas:
  - genericResponse: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "code": {
                  "type": "string",
                  "required": true
              },
              "status": {
                  "type": "string",
                  "required": false
              },
              "message": {
                  "type": "string",
                  "required": false
              },
              "data": {
                  "type": "string",
                  "required": false
              }
          }
      }
  - resourceLocation: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "id": {
                  "type": "string",
                  "required": true
              },
              "link": {
                  "type": "string",
                  "required": true
              }
          }
      }
  - errorMessage: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "error",
          "description": "schema for API specified errors",
          "type": "object",
          "properties": {
              "status": {
                  "type": "integer",
                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                  "minimum": "100",
                  "maximum": "599"
              },
              "type": {
                  "type": "string",
                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                  "pattern": "[a-z]+[[a-z]_]*[a-z]+"
              },
              "message": {
                  "type": "string",
                  "description": "descriptive error message for debugging"
              },
              "moreInfo": {
                  "type": "string",
                  "format": "uri",
                  "description": "link to documentation to investigate further and finding support"
              },
              "details": {
                  "type": "array",
                  "description": "list of problems causing this error",
                  "items": {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "errorDetail",
                      "description": "schema for specific error cause",
                      "type": "object",
                      "properties": {
                          "field": {
                              "type": "string",
                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error detail message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support for error detail"
                          }
                      },
                      "required": [
                          "type"
                      ]
                  }
              }
          },
          "required": [
              "status",
              "type"
          ]
      }
  - tenantData: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "tenant": {
                  "type": "string",
                  "description": "the name of the tenant",
                  "required": true
              },
              "apps": {
                  "type": "array",
                  "description": "the list of all existing apps for the tenant",
                  "items": {
                      "type": "string"
                  },
                  "required": true
              }
          }
      }
  - tenantsData: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "array",
          "items": {
              "type": "string"
          }
      }
  - tenantsStatistics: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "array",
          "items": {
              "type": "object",
              "properties": {
                  "timestamp": {
                      "type": "string"
                  },
                  "client": {
                      "type": "string"
                  },
                  "tenant": {
                      "type": "string"
                  },
                  "typeCount": {
                      "type": "integer"
                  },
                  "indexCount": {
                      "type": "null"
                  },
                  "dataSizeBytes": {
                      "type": "null"
                  }
              },
              "required": [
                  "timestamp",
                  "client",
                  "tenant",
                  "typeCount",
                  "indexCount",
                  "dataSizeBytes"
              ]
          }
      }
  - clientStatistics: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "timestamp": {
                  "type": "string"
              },
              "client": {
                  "type": "string"
              },
              "tenantCount": {
                  "type": "integer"
              },
              "typeCount": {
                  "type": "integer"
              },
              "indexCount": {
                  "type": "integer"
              },
              "dataSizeBytes": {
                  "type": "integer"
              }
          },
          "required": [
              "timestamp",
              "client",
              "tenantCount",
              "typeCount",
              "indexCount",
              "dataSizeBytes"
          ]
      }
  - appData: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
              "tenant": {
                  "type": "string",
                  "description": "the name of the tenant",
                  "required": true
              },
              "app": {
                  "type": "string",
                  "description": "the name of the app",
                  "required": true
              },
              "types": {
                  "type": "array",
                  "description": "the list of all existing types for the tenant, app comibination",
                  "items": {
                      "type": "string"
                  },
                  "required": true
              }
          }
      }
  - documentInput: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "additionalProperties": {
              "anyOf": [
                  {
                      "description": "Properties of document you want to store."
                  }
              ]
          },
          "properties": {
              "metadata": {
                  "type": "object",
                  "properties": {
                      "version": {
                          "type": "integer",
                          "minimum": 1
                      },
                      "schema": {
                          "type": "string",
                          "description": "URI to schema specified for document"
                      },
                      "mixins": {
                          "description": "Mixins object. Keys in mixins can be constructed only from numbers, letters, hyphens and underscores.",
                          "type": "object",
                          "patternProperties": {
                              "^[a-zA-Z0-9_-]*$": {
                                  "anyOf": [
                                      {
                                          "description": "URI for mixin.",
                                          "type": "string"
                                      },
                                      {
                                          "description": "Inline mixin.",
                                          "type": "object"
                                      }
                                  ]
                              }
                          },
                          "properties": {
                              "mixinsRoot": {
                                  "type": "string"
                              }
                          },
                          "additionalProperties": false
                      }
                  }
              },
              "id": {
                  "$ref": "https://api.yaas.io/patterns/v1/schema-id.json"
              }
          }
      }
  - documentOutput: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "additionalProperties": {
              "anyOf": [
                  {
                      "description": "Properties of document you want to store."
                  }
              ]
          },
          "properties": {
              "metadata": {
                  "type": "object",
                  "properties": {
                      "createdAt": {
                          "$ref": "https://api.yaas.io/patterns/v1/schema-createdAt.json"
                      },
                      "modifiedAt": {
                          "$ref": "https://api.yaas.io/patterns/v1/schema-modifiedAt.json"
                      },
                      "version": {
                          "type": "integer",
                          "minimum": 1
                      },
                      "schema": {
                          "type": "string",
                          "description": "URI to schema specified for document"
                      },
                      "mixins": {
                          "description": "Mixins object. Keys in mixins can be constructed only from numbers, letters, hyphens and underscores.",
                          "type": "object",
                          "patternProperties": {
                              "^[a-zA-Z0-9_-]*$": {
                                  "anyOf": [
                                      {
                                          "description": "URI for mixin.",
                                          "type": "string"
                                      },
                                      {
                                          "description": "Inline mixin.",
                                          "type": "object"
                                      }
                                  ]
                              }
                          },
                          "properties": {
                              "mixinsRoot": {
                                  "type": "string"
                              }
                          },
                          "additionalProperties": false
                      }
                  }
              },
              "id": {
                  "$ref": "https://api.yaas.io/patterns/v1/schema-id.json"
              }
          }
      }
  - documentsOutput: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "array",
          "items": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "additionalProperties": {
                  "anyOf": [
                      {
                          "description": "Properties of document you want to store."
                      }
                  ]
              },
              "properties": {
                  "metadata": {
                      "type": "object",
                      "properties": {
                          "createdAt": {
                              "$ref": "https://api.yaas.io/patterns/v1/schema-createdAt.json"
                          },
                          "modifiedAt": {
                              "$ref": "https://api.yaas.io/patterns/v1/schema-modifiedAt.json"
                          },
                          "version": {
                              "type": "integer",
                              "minimum": 1
                          },
                          "schema": {
                              "type": "string",
                              "description": "URI to schema specified for document"
                          },
                          "mixins": {
                              "description": "Mixins object. Keys in mixins can be constructed only from numbers, letters, hyphens and underscores.",
                              "type": "object",
                              "patternProperties": {
                                  "^[a-zA-Z0-9_-]*$": {
                                      "anyOf": [
                                          {
                                              "description": "URI for mixin.",
                                              "type": "string"
                                          },
                                          {
                                              "description": "Inline mixin.",
                                              "type": "object"
                                          }
                                      ]
                                  }
                              },
                              "properties": {
                                  "mixinsRoot": {
                                      "type": "string"
                                  }
                              },
                              "additionalProperties": false
                          }
                      }
                  },
                  "id": {
                      "$ref": "https://api.yaas.io/patterns/v1/schema-id.json"
                  }
              }
          }
      }
  - indexInput: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "input to create index",
          "type": "object",
          "properties": {
              "keys": {
                  "type": "object",
                  "additionalProperties": {
                      "type": "integer",
                      "minimum": -1,
                      "maximum": 1
                  }
              },
              "options": {
                  "type": "object",
                  "properties": {
                      "name": {
                          "type": "string"
                      },
                      "unique": {
                          "type": "boolean"
                      },
                      "sparse": {
                          "type": "boolean"
                      }
                  }
              }
          },
          "additionalProperties": false,
          "required": [
              "keys"
          ]
      }
  - indexOutput: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "index definition",
          "type": "object",
          "properties": {
              "key": {
                  "type": "object",
                  "additionalProperties": {
                      "type": "integer",
                      "minimum": -1,
                      "maximum": 1
                  }
              },
              "name": {
                  "type": "string"
              },
              "unique": {
                  "type": "boolean"
              },
              "sparse": {
                  "type": "boolean"
              }
          },
          "required": [
              "key",
              "name"
          ]
      }
  - indexesOutput: |
      {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "array with indexes",
          "type": "array",
          "items": {
              "type": "object",
              "properties": {
                  "key": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "integer",
                          "minimum": -1,
                          "maximum": 1
                      }
                  },
                  "name": {
                      "type": "string"
                  },
                  "unique": {
                      "type": "boolean"
                  },
                  "sparse": {
                      "type": "boolean"
                  }
              },
              "required": [
                  "key",
                  "name"
              ]
          }
      }
traits:
  - oauth2:
      usage: Apply this trait to support OAuth 2.0 authentication.
      description: |
        Supports OAuth 2.0 for authenticating all API requests.

      headers:
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        401:
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - projectable:
      usage: |
        Apply this trait to a method or resource where you want to limit number of fields returned.
      description: |
        This trait adds "fields" query parameter to the request so that the the result fields can be
        filtered on the server side.

      queryParameters:
        fields:
          type: string
          description: |
            Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
            Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

          example: code,name,description
  - partiallyUpdatable:
      usage: Apply this trait to PUT methods that support partial updates.
      description: |
        This trait adds a "partial" query parameter to the request, so that also partial updates of an element can be requested.

      queryParameters:
        partial:
          type: boolean
          description: |
            If true, a partial update will be supported, otherwise the full object replacement will be performed.

          example: true
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
  - patchable:
      usage: Apply this trait to PUT methods that support partial updates.
      description: |
        This trait adds a "patch" query parameter to the request, so that also partial updates of an element can be requested.

      queryParameters:
        patch:
          type: boolean
          description: |
            If true, a partial update will be supported, otherwise the full object replacement will be performed.

          example: true
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "patch",
                            "message": "not a boolean",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - paged:
      usage: |
        Apply this trait to a method returning a list of entities which should be paged.
      description: |
        This trait adds query parameters to the request so that the result can be paginated on the server side.
        The specified parameters are page number and page size.

      queryParameters:
        pageNumber:
          type: integer
          description: |
            The page number to be retrieved where the size of the pages must be specified by the pageSize parameter.
            The number of the first page is 1.

          minimum: 1
          example: 1
          default: 1
          required: false
        pageSize:
          type: integer
          description: |
            The number of documents being retrieved on the page.

          minimum: 1
          example: 16
          default: 16
          required: false
      responses:
        200:
          description: |
            Request was successful.

          headers:
            Link:
              description: |
                Link to the current page, the next page and the previous page. Marked accordingly with *rel* **self**, *rel* **next** and *rel* **prev**. The syntax must be conform to [RFC-5988](https://tools.ietf.org/html/rfc5988).
                The link to the current page (**self**) is required and must be provided always.
                The link to the next page (**next**) is optional. If not present, the next page is not available, as the current page is the last page of the result.
                The link to the previous page (**prev**) is optional. If not present, the previous page is not available, as the current page is the first page of the result.

              example: |
                <http://sample.com?pageNumber=2&pageSize=10>; rel="self", <http://sample.com?pageNumber=3&pageSize=10>; rel="next"
              required: true
              repeat: true
              type: string
              displayName: Link
        400:
          description: |
            Request was syntactically incorrect. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "pageNumber",
                            "message": "must be a positive number",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - sortable:
      usage: |
        Apply this to any method that support sorted results.

      queryParameters:
        sort:
          type: string
          description: |
            The list of comma-separated properties used to sort the results.
            By default, the column values are sorted in ascending order.
            Can either be in the form of fieldName or fieldName:asc,fieldName:desc.
            If you want to sort by localized attributes, you must use the following form:
            fieldName.language or fieldName.language:asc,fieldName.language:desc.

          example: |
            size,species:asc,weight:desc

          required: false
  - queryable:
      usage: |
        Apply this trait to a method returning a list of entities which should be queried.
      description: |
        This trait adds query parameters to the request so that the result can be queried and limited.

      queryParameters:
        q:
          type: string
          description: |
            The simple query criteria based on available fields to limit returned results or a set of modified documents.

          example: |
            species:dog name:"Clifford"

          required: false
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "q",
                            "message": "not a valid query",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - localizedModification:
      usage: Apply this trait when you want to modify localized attributes.
      description: |
        This trait provides localization headers for modifying localized attributes.

      headers:
        Content-Language:
          type: string
          description: |
            The locale identifier of the language of the updated attribute.

          example: pl
          required: false
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "Content-Language",
                            "message": "not a language",
                            "type": "invalid_header"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - localizedRetrieval:
      usage: Apply this trait when you want to retrieve localized attributes.
      description: |
        This trait provides localization headers for retrieving localized attributes.

      headers:
        Accept-Language:
          type: string
          description: |
            The value of the locale identifier of the language in which the attribute should be returned.
            Provide several values separated by comma, in order to specify fallback languages.

          example: pl
          repeat: true
          required: false
        hybris-languages:
          type: string
          description: |
            Comma separated list of language identifiers for which the localization for an attribute
            should be provided.

          example: en,pl,it
          repeat: true
          required: false
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "Accept-Language",
                            "message": "not a language",
                            "type": "invalid_header"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - countable:
      usage: |
        Apply this to a method which returns the total number of objects fulfilling some criteria.

      description: |
        This trait adds a query parameter to the request so that the response contains the total number
        of objects fulfilling the criteria.

      queryParameters:
        totalCount:
          type: boolean
          description: |
            This parameter requests to return the total number of object in the collection fulfilling
            the criteria together with the response. This number will be returned in the 'hybris-count'
            header.

          example: true
          required: false
      responses:
        200:
          headers:
            hybris-count:
              description: |
                The total number of objects that fulfil the criteria.

              type: integer
              example: 1000
              required: false
              displayName: hybris-count
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "totalCount",
                            "message": "must be a boolean",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
  - validated:
      usage: |
        apply to methods that need validation on parameters (tenant, client, type)
      responses:
        400:
          description: |
            Parameter is not valid: Parameter is empty or has special characters.

          body:
            application/json:
              schema: errorMessage
  - updateable:
      usage: apply to methods which may update data and violate index
      responses:
        409:
          description: |
            Data modification failed. Unique index violation.

          body:
            application/json:
              schema: errorMessage
  - parseJSON:
      usage: |
        apply this to any method that parses json objects

      responses:
        400:
          description: |
            JSON is invalid.

          body:
            application/json:
              schema: errorMessage
  - optimistic-locking:
      usage: |
        apply this to any method that supports optimistic locking

      queryParameters:
        version:
          type: integer
          description: |
            The version value.

          example: 1
          required: false
  - metaData:
      usage: |
        apply this to any method that requires additional metadata information

      headers:
        hybris-metaData:
          type: string
          description: |
            For more information about how to use metadata, see the Metadata topic in the Details section of the Document repository documentation.

          example: kind:localized;createDate:date;idAlias:id
          required: false
  - creatableOrUpdatable:
      usage: |
        apply this to any method that supports create or update operations

      queryParameters:
        upsert:
          type: boolean
          description: |
            If true, it will be created if it does not already exist. Otherwise a status code of 404 is returned.
          example: true
          required: false
  - creatable:
      usage: |
        apply this to methods that create new resources

      responses:
        201:
          description: |
            The request has been fulfilled and a new resource has been created.

          body:
            application/json:
              schema: resourceLocation
          headers:
            Location:
              description: |
                URI of the created resource.

              displayName: Location
              type: string
  - compactable:
      usage: |
        apply this to any method that support shrink operation

      queryParameters:
        compact:
          type: boolean
          description: |
            If true, then a shrink operation will be performed. Default is false.

          example: true
          required: false
  - allLanguages:
      usage: |
        apply this to any methods that support multi languages operations

      headers:
        hybris-languages:
          type: string
          example: "*"
          required: false
  - hybrisCurrency:
      usage: |
        apply this to any method that support filtering currency

      headers:
        hybris-currencies:
          type: string
          description: |
            Define the currency of response body. When hybris-currency is not set or is set to '*', it returns all currencies.
            When hybris-currency is set to '*', the service returns an error code of 400 with other currencies.

          example: USD,PLN,EUR
          required: false
  - cacheable:
      usage: |
        apply this trait to any method that supports caching control.

      responses:
        200:
          headers:
            Cache-Control:
              description: |
                Activate cache and define cache behaviour through cache response directives.
                Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

              type: string
              example: private, no-cache
              displayName: Cache-Control
            Expires:
              description: |
                Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

              type: date
              example: Mon, 03 Aug 2015 17:45:57 GMT
              displayName: Expires
        304:
          headers:
            Cache-Control:
              description: |
                Activate cache and define cache behaviour through cache response directives.
                Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

              type: string
              example: private, no-cache
              displayName: Cache-Control
            Expires:
              description: |
                Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

              type: date
              example: Mon, 03 Aug 2015 17:45:57 GMT
              displayName: Expires
  - contentCacheable:
      usage: |
        apply this trait to any method that supports content based caching (using ETags).

      headers:
        If-None-Match:
          type: string
          description: |
            This header requests to return resource if it does not match the given ETag. If the entity does match the provided ETag
            then HTTP 304 Not Modified status will be returned instead of requested resource.

          example: de305d54-75b4-431b-adb2-eb6b9e546014
          required: false
      responses:
        200:
          headers:
            ETag:
              description: |
                Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

              type: string
              example: de305d54-75b4-431b-adb2-eb6b9e546014
              displayName: ETag
            Cache-Control:
              description: |
                Activate cache and define cache behaviour through cache response directives.
                Usually defines if it's public or private (cacheable by proxy or not) and no-cache.
                See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

              type: string
              example: private, no-cache
              displayName: Cache-Control
        304:
          headers:
            ETag:
              description: |
                Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

              type: string
              example: de305d54-75b4-431b-adb2-eb6b9e546014
              displayName: ETag
            Cache-Control:
              description: |
                Activate cache and define cache behaviour through cache response directives.
                Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

              type: string
              example: private, no-cache
              displayName: Cache-Control
          description: |
            Entity has not been modified and the version cached by the client may be used.

  - fetchable:
      usage: |
        apply this to methods that return large resultsets to support streaming the response chunks

      queryParameters:
        fetchAll:
          type: boolean
          description: |
            Controls the way how documents are returned. If true, all documents are returned as HTTP chunks, otherwise paged results are returned.

          example: true
          required: false
  - contentEncodingAware:
      usage: |
        Apply this to the method which support content encoding - GZIP

      headers:
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
      responses: {}
  - textQueryable:
      usage: |
        Apply this trait to a method returning a list of entities which should be queried with full text search.
      description: |
        This trait adds query parameters to the request so that the result can be queried with full text index.

      queryParameters:
        text:
          type: string
          description: |
            The full text query criteria based on text index.

          example: |
            Amazing product with features

          required: false
        scoreField:
          type: string
          description: |
            A name of a field to be added to every result document containing text search score. **Applicable only to full text search.**

          example: |
            text_score

          required: false
        language:
          type: boolean
          description: |
            The language that determines the list of stop words for the search. Defaults to false. **Applicable only to full text search.**

          example: |
            en

          required: false
        caseSensitive:
          type: boolean
          description: |
            A boolean flag to enable or disable case sensitive search. Defaults to false. **Applicable only to full text search.**

          example: "true"
          required: false
        diacriticSensitive:
          type: boolean
          description: |
            A boolean flag to enable or disable diacritic sensitive search. Defaults to false. **Applicable only to full text search.**

          example: "false"
          required: false
      responses:
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "q",
                            "message": "not a valid query",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
/all:
  is: [ oauth2, contentEncodingAware ]
  get:
    is: [ cacheable ]
    description: |
      Returns a list of all tenants for a given client.
      <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

    headers:
      Content-Encoding:
        type: string
        description: |
          Define the content encoding used for payload. Only GZIP is supported.

        example: gzip
        required: false
      Accept-Encoding:
        type: string
        description: |
          Define the client is accepting the given content encoding.

        example: gzip
        required: false
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    responses:
      200:
        headers:
          Cache-Control:
            description: |
              Activate cache and define cache behaviour through cache response directives.
              Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
              See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

            type: string
            example: private, no-cache
            displayName: Cache-Control
          Expires:
            description: |
              Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
              If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

            type: date
            example: Mon, 03 Aug 2015 17:45:57 GMT
            displayName: Expires
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
        description: |
          The request succeeded.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "array",
                  "items": {
                      "type": "string"
                  }
              }
            example: |
              [
                  "firstTenant",
                  "secondTenant"
              ]
      304:
        headers:
          Cache-Control:
            description: |
              Activate cache and define cache behaviour through cache response directives.
              Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
              See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

            type: string
            example: private, no-cache
            displayName: Cache-Control
          Expires:
            description: |
              Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
              If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

            type: date
            example: Mon, 03 Aug 2015 17:45:57 GMT
            displayName: Expires
      401:
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 401,
                  "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type": "insufficient_credentials",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      403:
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
  /statistics:
    is: [ oauth2, contentEncodingAware ]
    get:
      description: |
        Returns a list of all tenants for a given client **with usage statistics**.
         <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

      headers:
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        200:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            The request succeeded.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "timestamp": {
                                "type": "string"
                            },
                            "client": {
                                "type": "string"
                            },
                            "tenant": {
                                "type": "string"
                            },
                            "typeCount": {
                                "type": "integer"
                            },
                            "indexCount": {
                                "type": "null"
                            },
                            "dataSizeBytes": {
                                "type": "null"
                            }
                        },
                        "required": [
                            "timestamp",
                            "client",
                            "tenant",
                            "typeCount",
                            "indexCount",
                            "dataSizeBytes"
                        ]
                    }
                }
              example: |
                [
                  {
                    "timestamp": "2016-11-23T09:54:04.798+0000",
                    "client": "hybris.product",
                    "tenant": "tenant1",
                    "typeCount": 5
                  },
                  {
                    "timestamp": "2016-11-23T09:54:04.798+0000
                    "client": "hybris.product",
                    "tenant": "tenant2",
                    "typeCount": 3
                  },
                  {
                    "timestamp": "2016-11-23T09:54:04.798+0000",
                    "client": "hybris.product",
                    "tenant": "tenant3",
                    "typeCount": 4
                  }
                ]

        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    /total:
      is: [ oauth2, contentEncodingAware ]
      get:
        description: |
          Returns a document with detailed usage statistics for a given client.
            <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

        headers:
          Content-Encoding:
            type: string
            description: |
              Define the content encoding used for payload. Only GZIP is supported.

            example: gzip
            required: false
          Accept-Encoding:
            type: string
            description: |
              Define the client is accepting the given content encoding.

            example: gzip
            required: false
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        responses:
          200:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              The request succeeded.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                          "timestamp": {
                              "type": "string"
                          },
                          "client": {
                              "type": "string"
                          },
                          "tenantCount": {
                              "type": "integer"
                          },
                          "typeCount": {
                              "type": "integer"
                          },
                          "indexCount": {
                              "type": "integer"
                          },
                          "dataSizeBytes": {
                              "type": "integer"
                          }
                      },
                      "required": [
                          "timestamp",
                          "client",
                          "tenantCount",
                          "typeCount",
                          "indexCount",
                          "dataSizeBytes"
                      ]
                  }
                example: |
                  {
                      "timestamp": "2016-11-23T09:54:04.798+0000",
                      "client": "hybris.product",
                      "tenantCount": 253,
                      "typeCount": 276,
                      "indexCount": 278,
                      "dataSizeBytes": 4445309608
                  }
          401:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
/{tenant}:
  uriParameters:
    tenant:
      type: string
      description: |
        The tenant string is the project's Identifier from the Builder.

      required: true
  is: [ oauth2, contentEncodingAware, validated ]
  description: |
    Deprecated because of security vulnerability. The tenant string is the project's Identifier from the Builder.
    type: string

  get:
    is: [ cacheable, contentCacheable ]
    description: |
      Deprecated because of security vulnerability.

    headers:
      If-None-Match:
        type: string
        description: |
          This header requests to return resource if it does not match the given ETag. If the entity does match the provided ETag
          then HTTP 304 Not Modified status will be returned instead of requested resource.

        example: de305d54-75b4-431b-adb2-eb6b9e546014
        required: false
      Content-Encoding:
        type: string
        description: |
          Define the content encoding used for payload. Only GZIP is supported.

        example: gzip
        required: false
      Accept-Encoding:
        type: string
        description: |
          Define the client is accepting the given content encoding.

        example: gzip
        required: false
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    responses:
      200:
        headers:
          ETag:
            description: |
              Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

            type: string
            example: de305d54-75b4-431b-adb2-eb6b9e546014
            displayName: ETag
          Cache-Control:
            description: |
              Activate cache and define cache behaviour through cache response directives.
              Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
              See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

            type: string
            example: private, no-cache
            displayName: Cache-Control
          Expires:
            description: |
              Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
              If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

            type: date
            example: Mon, 03 Aug 2015 17:45:57 GMT
            displayName: Expires
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
      304:
        headers:
          ETag:
            description: |
              Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

            type: string
            example: de305d54-75b4-431b-adb2-eb6b9e546014
            displayName: ETag
          Cache-Control:
            description: |
              Activate cache and define cache behaviour through cache response directives.
              Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
              See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

            type: string
            example: private, no-cache
            displayName: Cache-Control
          Expires:
            description: |
              Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
              If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

            type: date
            example: Mon, 03 Aug 2015 17:45:57 GMT
            displayName: Expires
        description: |
          Entity has not been modified and the version cached by the client may be used.

      400:
        description: |
          Parameter is not valid: Parameter is empty or has special characters.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "schema for API specified errors",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": "100",
                          "maximum": "599"
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
      401:
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 401,
                  "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type": "insufficient_credentials",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      403:
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "schema for API specified errors",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": "100",
                          "maximum": "599"
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
  head:
    description: |
      Deprecated because of security vulnerability.

    headers:
      Content-Encoding:
        type: string
        description: |
          Define the content encoding used for payload. Only GZIP is supported.

        example: gzip
        required: false
      Accept-Encoding:
        type: string
        description: |
          Define the client is accepting the given content encoding.

        example: gzip
        required: false
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    responses:
      400:
        description: |
          Parameter is not valid: Parameter is empty or has special characters.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "schema for API specified errors",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": "100",
                          "maximum": "599"
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
      401:
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 401,
                  "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type": "insufficient_credentials",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      403:
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "schema for API specified errors",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": "100",
                          "maximum": "599"
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
  delete:
    description: |
      Deprecated because of security vulnerability.

    headers:
      Content-Encoding:
        type: string
        description: |
          Define the content encoding used for payload. Only GZIP is supported.

        example: gzip
        required: false
      Accept-Encoding:
        type: string
        description: |
          Define the client is accepting the given content encoding.

        example: gzip
        required: false
      Authorization:
        type: string
        description: |
          Used to send a valid OAuth2 access token.

        example: Bearer access_token
        required: true
    responses:
      400:
        description: |
          Parameter is not valid: Parameter is empty or has special characters.

        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "schema for API specified errors",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": "100",
                          "maximum": "599"
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
      401:
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
        description: |
          Given request is unauthorized. Bad or expired token. Reauthenticate
          the user. Any details will be provided within the response payload.

        body:
          application/json:
            example: |
              {
                  "status": 401,
                  "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                  "type": "insufficient_credentials",
                  "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "Schema for API specified errors.",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": 100,
                          "maximum": 599
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[a-z_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
      403:
        headers:
          Content-Encoding:
            description: |
              The encoding applied to the response body.

            example: gzip
            displayName: Content-Encoding
            type: string
        description: |
          Evaluated request scopes in access token are not sufficient and do not match required scopes.

        body:
          application/json:
            example: |
              {
                  "status": 403,
                  "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                  "type": "insufficient_permissions"
              }
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "title": "error",
                  "description": "schema for API specified errors",
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "integer",
                          "description": "original HTTP error code, should be consistent with the response HTTP code",
                          "minimum": "100",
                          "maximum": "599"
                      },
                      "type": {
                          "type": "string",
                          "description": "classification of the error type, lower case with underscore eg validation_failure",
                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                      },
                      "message": {
                          "type": "string",
                          "description": "descriptive error message for debugging"
                      },
                      "moreInfo": {
                          "type": "string",
                          "format": "uri",
                          "description": "link to documentation to investigate further and finding support"
                      },
                      "details": {
                          "type": "array",
                          "description": "list of problems causing this error",
                          "items": {
                              "$schema": "http://json-schema.org/draft-04/schema#",
                              "title": "errorDetail",
                              "description": "schema for specific error cause",
                              "type": "object",
                              "properties": {
                                  "field": {
                                      "type": "string",
                                      "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                  },
                                  "type": {
                                      "type": "string",
                                      "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                      "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                  },
                                  "message": {
                                      "type": "string",
                                      "description": "descriptive error detail message for debugging"
                                  },
                                  "moreInfo": {
                                      "type": "string",
                                      "format": "uri",
                                      "description": "link to documentation to investigate further and finding support for error detail"
                                  }
                              },
                              "required": [
                                  "type"
                              ]
                          }
                      }
                  },
                  "required": [
                      "status",
                      "type"
                  ]
              }
  /{client}:
    uriParameters:
      client:
        type: string
        required: true
    is: [ oauth2, contentEncodingAware, validated ]
    get:
      is: [ cacheable, contentCacheable ]
      description: |
        Returns an internal representation of an application. Contains a list of existing types for this client and tenant.
        <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for
        <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

      headers:
        If-None-Match:
          type: string
          description: |
            This header requests to return resource if it does not match the given ETag. If the entity does match the provided ETag
            then HTTP 304 Not Modified status will be returned instead of requested resource.

          example: de305d54-75b4-431b-adb2-eb6b9e546014
          required: false
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        200:
          headers:
            ETag:
              description: |
                Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

              type: string
              example: de305d54-75b4-431b-adb2-eb6b9e546014
              displayName: ETag
            Cache-Control:
              description: |
                Activate cache and define cache behaviour through cache response directives.
                Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

              type: string
              example: private, no-cache
              displayName: Cache-Control
            Expires:
              description: |
                Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

              type: date
              example: Mon, 03 Aug 2015 17:45:57 GMT
              displayName: Expires
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            The request succeeded.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                        "tenant": {
                            "type": "string",
                            "description": "the name of the tenant",
                            "required": true
                        },
                        "app": {
                            "type": "string",
                            "description": "the name of the app",
                            "required": true
                        },
                        "types": {
                            "type": "array",
                            "description": "the list of all existing types for the tenant, app comibination",
                            "items": {
                                "type": "string"
                            },
                            "required": true
                        }
                    }
                }
              example: |
                {
                  "tenant" : "bookstore"
                  "app" : "product",
                  "types" : [
                      "products",
                      "prices"
                  ]
                }

        304:
          headers:
            ETag:
              description: |
                Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

              type: string
              example: de305d54-75b4-431b-adb2-eb6b9e546014
              displayName: ETag
            Cache-Control:
              description: |
                Activate cache and define cache behaviour through cache response directives.
                Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

              type: string
              example: private, no-cache
              displayName: Cache-Control
            Expires:
              description: |
                Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

              type: date
              example: Mon, 03 Aug 2015 17:45:57 GMT
              displayName: Expires
          description: |
            Entity has not been modified and the version cached by the client may be used.

        400:
          description: |
            Parameter is not valid: Parameter is empty or has special characters.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "schema for API specified errors",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": "100",
                            "maximum": "599"
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    head:
      description: |
        Returns the same result as GET method but without body. <br/> <br/> **Security / Access Control:** <br/>To
        access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b>
        scope to manage this resource.

      headers:
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        200:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            The request succeeded.

        400:
          description: |
            Parameter is not valid: Parameter is empty or has special characters.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "schema for API specified errors",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": "100",
                            "maximum": "599"
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    delete:
      description: |
        Deletes data and indexes for the specified tenant and client.
        <br/> <br/> **Security / Access Control:** <br/>To access this method, access token issued for
        <b>client-owner</b> must have <b>hybris.document_admin</b> and <b>hybris.document_manage</b> scopes, or access
        token issued for tenant must have <b>hybris.document_manage</b> scope to manage this resource.

      headers:
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        204:
          description: |
            The request succeeded.

        400:
          description: |
            Parameter is not valid: Parameter is empty or has special characters.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "schema for API specified errors",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": "100",
                            "maximum": "599"
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    /data/{type}:
      uriParameters:
        type:
          type: string
          required: true
      is: [ oauth2, contentEncodingAware, validated, metaData ]
      head:
        is: [ queryable ]
        description: |
          Returns the number of objects of this type.
          The 'q' query parameter enables you to count only objects fulfilling the criteria. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

        headers:
          hybris-metaData:
            type: string
            description: |
              For more information about how to use metadata, see the Metadata topic in the Details section of the Document repository documentation.

            example: kind:localized;createDate:date;idAlias:id
            required: false
          Content-Encoding:
            type: string
            description: |
              Define the content encoding used for payload. Only GZIP is supported.

            example: gzip
            required: false
          Accept-Encoding:
            type: string
            description: |
              Define the client is accepting the given content encoding.

            example: gzip
            required: false
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        queryParameters:
          q:
            type: string
            description: |
              The simple query criteria based on available fields to limit returned results or a set of modified documents.

            example: |
              species:dog name:"Clifford"

            required: false
        responses:
          200:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
              hybris-count:
                description: |
                  The total number of objects.

                type: integer
                example: 1
                displayName: hybris-count
            description: |
              The number of objects sucessfully returned.

          400:
            description: |
              Parameter is not valid: Parameter is empty or has special characters.

            body:
              application/json:
                example: |
                  {
                      "status": 400,
                      "message": "There are validation problems, see details section for more information",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                      "type": "validation_violation",
                      "details": [
                          {
                              "field": "q",
                              "message": "not a valid query",
                              "type": "invalid_query_parameter"
                          }
                      ]
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "schema for API specified errors",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": "100",
                              "maximum": "599"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
          401:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
      get:
        is:
          - allLanguages
          - metaData
          - queryable
          - sortable
          - paged
          - localizedRetrieval
          - countable
          - projectable
          - hybrisCurrency
          - cacheable
          - contentCacheable
          - fetchable
          - textQueryable
        description: |
          Returns all objects of this type which satisfy the criteria from the 'q' query parameter.  If the 'q' query parameter is omitted, then the response contains all objects of this type.
          <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

        headers:
          If-None-Match:
            type: string
            description: |
              This header requests to return resource if it does not match the given ETag. If the entity does match the provided ETag
              then HTTP 304 Not Modified status will be returned instead of requested resource.

            example: de305d54-75b4-431b-adb2-eb6b9e546014
            required: false
          hybris-currencies:
            type: string
            description: |
              Define the currency of response body. When hybris-currency is not set or is set to '*', it returns all currencies.
              When hybris-currency is set to '*', the service returns an error code of 400 with other currencies.

            example: USD,PLN,EUR
            required: false
          Accept-Language:
            type: string
            description: |
              The value of the locale identifier of the language in which the attribute should be returned.
              Provide several values separated by comma, in order to specify fallback languages.

            example: pl
            repeat: true
            required: false
          hybris-languages:
            type: string
            description: |
              Comma separated list of language identifiers for which the localization for an attribute
              should be provided.

            example: "*"
            repeat: true
            required: false
          hybris-metaData:
            type: string
            description: |
              For more information about how to use metadata, see the Metadata topic in the Details section of the Document repository documentation.

            example: kind:localized;createDate:date;idAlias:id
            required: false
          Content-Encoding:
            type: string
            description: |
              Define the content encoding used for payload. Only GZIP is supported.

            example: gzip
            required: false
          Accept-Encoding:
            type: string
            description: |
              Define the client is accepting the given content encoding.

            example: gzip
            required: false
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        queryParameters:
          text:
            type: string
            description: |
              The full text query criteria based on text index.

            example: |
              Amazing product with features

            required: false
          scoreField:
            type: string
            description: |
              A name of a field to be added to every result document containing text search score. **Applicable only to full text search.**

            example: |
              text_score

            required: false
          language:
            type: boolean
            description: |
              The language that determines the list of stop words for the search. Defaults to false. **Applicable only to full text search.**

            example: |
              en

            required: false
          caseSensitive:
            type: boolean
            description: |
              A boolean flag to enable or disable case sensitive search. Defaults to false. **Applicable only to full text search.**

            example: "true"
            required: false
          diacriticSensitive:
            type: boolean
            description: |
              A boolean flag to enable or disable diacritic sensitive search. Defaults to false. **Applicable only to full text search.**

            example: "false"
            required: false
          fetchAll:
            type: boolean
            description: |
              Controls the way how documents are returned. If true, all documents are returned as HTTP chunks, otherwise paged results are returned.

            example: true
            required: false
          fields:
            type: string
            description: |
              Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
              Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

            example: code,name,description
          totalCount:
            type: boolean
            description: |
              This parameter requests to return the total number of object in the collection fulfilling
              the criteria together with the response. This number will be returned in the 'hybris-count'
              header.

            example: true
            required: false
          pageNumber:
            type: integer
            description: |
              The page number to be retrieved where the size of the pages must be specified by the pageSize parameter.
              The number of the first page is 1.

            minimum: 1
            example: 1
            default: 1
            required: false
          pageSize:
            type: integer
            description: |
              The number of documents being retrieved on the page.

            minimum: 1
            example: 16
            default: 16
            required: false
          sort:
            type: string
            description: |
              The list of comma-separated properties used to sort the results.
              By default, the column values are sorted in ascending order.
              Can either be in the form of fieldName or fieldName:asc,fieldName:desc.
              If you want to sort by localized attributes, you must use the following form:
              fieldName.language or fieldName.language:asc,fieldName.language:desc.

            example: |
              size,species:asc,weight:desc

            required: false
          q:
            type: string
            description: |
              The simple query criteria based on available fields to limit returned results or a set of modified documents.

            example: |
              species:dog name:"Clifford"

            required: false
        responses:
          200:
            headers:
              ETag:
                description: |
                  Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

                type: string
                example: de305d54-75b4-431b-adb2-eb6b9e546014
                displayName: ETag
              Cache-Control:
                description: |
                  Activate cache and define cache behaviour through cache response directives.
                  Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                  See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

                type: string
                example: private, no-cache
                displayName: Cache-Control
              Expires:
                description: |
                  Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                  If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

                type: date
                example: Mon, 03 Aug 2015 17:45:57 GMT
                displayName: Expires
              hybris-count:
                description: |
                  The total number of objects that fulfil the criteria.

                type: integer
                example: 1000
                required: false
                displayName: hybris-count
              Link:
                description: |
                  Link to the current page, the next page and the previous page. Marked accordingly with *rel* **self**, *rel* **next** and *rel* **prev**. The syntax must be conform to [RFC-5988](https://tools.ietf.org/html/rfc5988).
                  The link to the current page (**self**) is required and must be provided always.
                  The link to the next page (**next**) is optional. If not present, the next page is not available, as the current page is the last page of the result.
                  The link to the previous page (**prev**) is optional. If not present, the previous page is not available, as the current page is the first page of the result.

                example: |
                  <http://sample.com?pageNumber=2&pageSize=10>; rel="self", <http://sample.com?pageNumber=3&pageSize=10>; rel="next"
                required: true
                repeat: true
                type: string
                displayName: Link
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              The page of objects in the collection successfully returned.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "array",
                      "items": {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "type": "object",
                          "additionalProperties": {
                              "anyOf": [
                                  {
                                      "description": "Properties of document you want to store."
                                  }
                              ]
                          },
                          "properties": {
                              "metadata": {
                                  "type": "object",
                                  "properties": {
                                      "createdAt": {
                                          "$ref": "https://api.yaas.io/patterns/v1/schema-createdAt.json"
                                      },
                                      "modifiedAt": {
                                          "$ref": "https://api.yaas.io/patterns/v1/schema-modifiedAt.json"
                                      },
                                      "version": {
                                          "type": "integer",
                                          "minimum": 1
                                      },
                                      "schema": {
                                          "type": "string",
                                          "description": "URI to schema specified for document"
                                      },
                                      "mixins": {
                                          "description": "Mixins object. Keys in mixins can be constructed only from numbers, letters, hyphens and underscores.",
                                          "type": "object",
                                          "patternProperties": {
                                              "^[a-zA-Z0-9_-]*$": {
                                                  "anyOf": [
                                                      {
                                                          "description": "URI for mixin.",
                                                          "type": "string"
                                                      },
                                                      {
                                                          "description": "Inline mixin.",
                                                          "type": "object"
                                                      }
                                                  ]
                                              }
                                          },
                                          "properties": {
                                              "mixinsRoot": {
                                                  "type": "string"
                                              }
                                          },
                                          "additionalProperties": false
                                      }
                                  }
                              },
                              "id": {
                                  "$ref": "https://api.yaas.io/patterns/v1/schema-id.json"
                              }
                          }
                      }
                  }
                example: |
                  [
                      {
                          "id": "52f56f583004a2d134ddb393",
                          "name": "Astro",
                          "kind": "pies",
                          "metadata": {
                              "version": 1,
                              "createdAt": "2015-01-01T10:00:00.530+0000",
                              "modifiedAt": "2015-02-01T11:00:00.530+0000"
                          }
                      },
                      {
                          "id": "52f56f583004a2d134ddb394",
                          "name": "Pluto",
                          "kind": "pies",
                          "metadata": {
                              "version": 2,
                              "createdAt": "2015-01-01T10:00:00.530+0000",
                              "modifiedAt": "2015-02-01T12:00:00.530+0000"
                          }
                      }
                  ]
          304:
            headers:
              ETag:
                description: |
                  Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

                type: string
                example: de305d54-75b4-431b-adb2-eb6b9e546014
                displayName: ETag
              Cache-Control:
                description: |
                  Activate cache and define cache behaviour through cache response directives.
                  Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                  See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

                type: string
                example: private, no-cache
                displayName: Cache-Control
              Expires:
                description: |
                  Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                  If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

                type: date
                example: Mon, 03 Aug 2015 17:45:57 GMT
                displayName: Expires
            description: |
              Entity has not been modified and the version cached by the client may be used.

          400:
            description: |
              Parameter is not valid: Parameter is empty or has special characters.

            body:
              application/json:
                example: |
                  {
                      "status": 400,
                      "message": "There are validation problems, see details section for more information",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                      "type": "validation_violation",
                      "details": [
                          {
                              "field": "q",
                              "message": "not a valid query",
                              "type": "invalid_query_parameter"
                          }
                      ]
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "schema for API specified errors",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": "100",
                              "maximum": "599"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
          401:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          408:
            description: |
              Long running request (taking more than one second) timed out. The root cause of such response might be too huge page size or scanning a type without an index on it.

      post:
        is:
          - allLanguages
          - metaData
          - creatable
          - localizedModification
          - validated
          - updateable
          - parseJSON
        description: |
          Creates a new object of this type.
          <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

        headers:
          Content-Language:
            type: string
            description: |
              The locale identifier of the language of the updated attribute.

            example: pl
            required: false
          hybris-metaData:
            type: string
            description: |
              For more information about how to use metadata, see the Metadata topic in the Details section of the Document repository documentation.

            example: kind:localized;createDate:date;idAlias:id
            required: false
          hybris-languages:
            type: string
            example: "*"
            required: false
          Content-Encoding:
            type: string
            description: |
              Define the content encoding used for payload. Only GZIP is supported.

            example: gzip
            required: false
          Accept-Encoding:
            type: string
            description: |
              Define the client is accepting the given content encoding.

            example: gzip
            required: false
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        queryParameters:
          rawwrite:
            type: string
            description: |
              If true, then the body of the request is stored as a raw data. The body must contain **id** field as well as **createdAt**, **modifiedAt** and **version** metadata attributes.

            required: false
        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "additionalProperties": {
                      "anyOf": [
                          {
                              "description": "Properties of document you want to store."
                          }
                      ]
                  },
                  "properties": {
                      "metadata": {
                          "type": "object",
                          "properties": {
                              "version": {
                                  "type": "integer",
                                  "minimum": 1
                              },
                              "schema": {
                                  "type": "string",
                                  "description": "URI to schema specified for document"
                              },
                              "mixins": {
                                  "description": "Mixins object. Keys in mixins can be constructed only from numbers, letters, hyphens and underscores.",
                                  "type": "object",
                                  "patternProperties": {
                                      "^[a-zA-Z0-9_-]*$": {
                                          "anyOf": [
                                              {
                                                  "description": "URI for mixin.",
                                                  "type": "string"
                                              },
                                              {
                                                  "description": "Inline mixin.",
                                                  "type": "object"
                                              }
                                          ]
                                      }
                                  },
                                  "properties": {
                                      "mixinsRoot": {
                                          "type": "string"
                                      }
                                  },
                                  "additionalProperties": false
                              }
                          }
                      },
                      "id": {
                          "$ref": "https://api.yaas.io/patterns/v1/schema-id.json"
                      }
                  }
              }
            example: |
              {
                  "kind": {
                      "pl-pl": "pies",
                      "en": "dog"
                  },
                  "name": "Astro"
              }
        responses:
          201:
            description: |
              The request succeeded. The information returned with the response is dependent upon the method used in the request.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                          "id": {
                              "type": "string",
                              "required": true
                          },
                          "link": {
                              "type": "string",
                              "required": true
                          }
                      }
                  }
            headers:
              Location:
                description: |
                  URI of the created resource.

                displayName: Location
                type: string
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
          400:
            description: |
              Parameter is not valid: Parameter is empty or has special characters.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "schema for API specified errors",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": "100",
                              "maximum": "599"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
                example: |
                  {
                      "status": 400,
                      "message": "There are validation problems, see details section for more information",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                      "type": "validation_violation",
                      "details": [
                          {
                              "field": "Content-Language",
                              "message": "not a language",
                              "type": "invalid_header"
                          }
                      ]
                  }
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
          401:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          409:
            description: |
              Data modification failed. Unique index violation.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "schema for API specified errors",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": "100",
                              "maximum": "599"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
      delete:
        is: [ queryable ]
        description: |
          Deletes data for the specified type.
          <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

        headers:
          hybris-metaData:
            type: string
            description: |
              For more information about how to use metadata, see the Metadata topic in the Details section of the Document repository documentation.

            example: kind:localized;createDate:date;idAlias:id
            required: false
          Content-Encoding:
            type: string
            description: |
              Define the content encoding used for payload. Only GZIP is supported.

            example: gzip
            required: false
          Accept-Encoding:
            type: string
            description: |
              Define the client is accepting the given content encoding.

            example: gzip
            required: false
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        queryParameters:
          q:
            type: string
            description: |
              The simple query criteria based on available fields to limit returned results or a set of modified documents.

            example: |
              species:dog name:"Clifford"

            required: false
          drop:
            type: string
            description: |
              If true, then all data from the specified type is removed, and the indexes are also removed.
              If false, then all data from the specified type is removed, but the indexes are not removed.

            example: true
            required: false
        responses:
          204:
            description: |
              The request succeeded.

          400:
            description: |
              Parameter is not valid: Parameter is empty or has special characters.

            body:
              application/json:
                example: |
                  {
                      "status": 400,
                      "message": "There are validation problems, see details section for more information",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                      "type": "validation_violation",
                      "details": [
                          {
                              "field": "q",
                              "message": "not a valid query",
                              "type": "invalid_query_parameter"
                          }
                      ]
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "schema for API specified errors",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": "100",
                              "maximum": "599"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
          401:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
      put:
        is:
          - allLanguages
          - metaData
          - queryable
          - localizedModification
          - validated
          - updateable
          - parseJSON
        description: |
          Bulk update of data which will be matched by a given query. All elements that match the query will be updated by data sent in payload.
          <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

        headers:
          Content-Language:
            type: string
            description: |
              The locale identifier of the language of the updated attribute.

            example: pl
            required: false
          hybris-metaData:
            type: string
            description: |
              For more information about how to use metadata, see the Metadata topic in the Details section of the Document repository documentation.

            example: kind:localized;createDate:date;idAlias:id
            required: false
          hybris-languages:
            type: string
            example: "*"
            required: false
          Content-Encoding:
            type: string
            description: |
              Define the content encoding used for payload. Only GZIP is supported.

            example: gzip
            required: false
          Accept-Encoding:
            type: string
            description: |
              Define the client is accepting the given content encoding.

            example: gzip
            required: false
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        queryParameters:
          q:
            type: string
            description: |
              The simple query criteria based on available fields to limit returned results or a set of modified documents.

            example: |
              species:dog name:"Clifford"

            required: false
        body:
          application/json:
            schema: |
              {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "additionalProperties": {
                      "anyOf": [
                          {
                              "description": "Properties of document you want to store."
                          }
                      ]
                  },
                  "properties": {
                      "metadata": {
                          "type": "object",
                          "properties": {
                              "version": {
                                  "type": "integer",
                                  "minimum": 1
                              },
                              "schema": {
                                  "type": "string",
                                  "description": "URI to schema specified for document"
                              },
                              "mixins": {
                                  "description": "Mixins object. Keys in mixins can be constructed only from numbers, letters, hyphens and underscores.",
                                  "type": "object",
                                  "patternProperties": {
                                      "^[a-zA-Z0-9_-]*$": {
                                          "anyOf": [
                                              {
                                                  "description": "URI for mixin.",
                                                  "type": "string"
                                              },
                                              {
                                                  "description": "Inline mixin.",
                                                  "type": "object"
                                              }
                                          ]
                                      }
                                  },
                                  "properties": {
                                      "mixinsRoot": {
                                          "type": "string"
                                      }
                                  },
                                  "additionalProperties": false
                              }
                          }
                      },
                      "id": {
                          "$ref": "https://api.yaas.io/patterns/v1/schema-id.json"
                      }
                  }
              }
            example: |
              {
                  "kind": {
                      "pl-pl": "kot",
                      "en": "cat",
                      "de": "katze"
                  },
                  "name": "Astro"
              }
        responses:
          200:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              The request succeeded. The information returned with the response is dependent upon the method used in the request.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "type": "object",
                      "properties": {
                          "code": {
                              "type": "string",
                              "required": true
                          },
                          "status": {
                              "type": "string",
                              "required": false
                          },
                          "message": {
                              "type": "string",
                              "required": false
                          },
                          "data": {
                              "type": "string",
                              "required": false
                          }
                      }
                  }
          400:
            description: |
              Parameter is not valid: Parameter is empty or has special characters.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "schema for API specified errors",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": "100",
                              "maximum": "599"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
                example: |
                  {
                      "status": 400,
                      "message": "There are validation problems, see details section for more information",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                      "type": "validation_violation",
                      "details": [
                          {
                              "field": "q",
                              "message": "not a valid query",
                              "type": "invalid_query_parameter"
                          }
                      ]
                  }
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
          401:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          409:
            description: |
              Data modification failed. Unique index violation.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "schema for API specified errors",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": "100",
                              "maximum": "599"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
      /{dataId}:
        uriParameters:
          dataId:
            type: string
            required: true
        is: [ oauth2, contentEncodingAware, validated ]
        get:
          is:
            - allLanguages
            - metaData
            - localizedRetrieval
            - projectable
            - hybrisCurrency
            - cacheable
            - contentCacheable
          description: |
            Returns objects by objectId of this type.  If the request does not contain the hybris-metaData header parameter with information about the attribute's localization or type conversions, then the response contains raw data. Cannot contain the following characters: /\\ \"*<>|?
            <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

          headers:
            If-None-Match:
              type: string
              description: |
                This header requests to return resource if it does not match the given ETag. If the entity does match the provided ETag
                then HTTP 304 Not Modified status will be returned instead of requested resource.

              example: de305d54-75b4-431b-adb2-eb6b9e546014
              required: false
            hybris-currencies:
              type: string
              description: |
                Define the currency of response body. When hybris-currency is not set or is set to '*', it returns all currencies.
                When hybris-currency is set to '*', the service returns an error code of 400 with other currencies.

              example: USD,PLN,EUR
              required: false
            Accept-Language:
              type: string
              description: |
                The value of the locale identifier of the language in which the attribute should be returned.
                Provide several values separated by comma, in order to specify fallback languages.

              example: pl
              repeat: true
              required: false
            hybris-languages:
              type: string
              description: |
                Comma separated list of language identifiers for which the localization for an attribute
                should be provided.

              example: "*"
              repeat: true
              required: false
            hybris-metaData:
              type: string
              description: |
                For more information about how to use metadata, see the Metadata topic in the Details section of the Document repository documentation.

              example: kind:localized;createDate:date;idAlias:id
              required: false
            Content-Encoding:
              type: string
              description: |
                Define the content encoding used for payload. Only GZIP is supported.

              example: gzip
              required: false
            Accept-Encoding:
              type: string
              description: |
                Define the client is accepting the given content encoding.

              example: gzip
              required: false
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          queryParameters:
            fields:
              type: string
              description: |
                Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
                Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

              example: code,name,description
          responses:
            200:
              headers:
                ETag:
                  description: |
                    Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

                  type: string
                  example: de305d54-75b4-431b-adb2-eb6b9e546014
                  displayName: ETag
                Cache-Control:
                  description: |
                    Activate cache and define cache behaviour through cache response directives.
                    Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                    See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

                  type: string
                  example: private, no-cache
                  displayName: Cache-Control
                Expires:
                  description: |
                    Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                    If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

                  type: date
                  example: Mon, 03 Aug 2015 17:45:57 GMT
                  displayName: Expires
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "additionalProperties": {
                            "anyOf": [
                                {
                                    "description": "Properties of document you want to store."
                                }
                            ]
                        },
                        "properties": {
                            "metadata": {
                                "type": "object",
                                "properties": {
                                    "createdAt": {
                                        "$ref": "https://api.yaas.io/patterns/v1/schema-createdAt.json"
                                    },
                                    "modifiedAt": {
                                        "$ref": "https://api.yaas.io/patterns/v1/schema-modifiedAt.json"
                                    },
                                    "version": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "schema": {
                                        "type": "string",
                                        "description": "URI to schema specified for document"
                                    },
                                    "mixins": {
                                        "description": "Mixins object. Keys in mixins can be constructed only from numbers, letters, hyphens and underscores.",
                                        "type": "object",
                                        "patternProperties": {
                                            "^[a-zA-Z0-9_-]*$": {
                                                "anyOf": [
                                                    {
                                                        "description": "URI for mixin.",
                                                        "type": "string"
                                                    },
                                                    {
                                                        "description": "Inline mixin.",
                                                        "type": "object"
                                                    }
                                                ]
                                            }
                                        },
                                        "properties": {
                                            "mixinsRoot": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                }
                            },
                            "id": {
                                "$ref": "https://api.yaas.io/patterns/v1/schema-id.json"
                            }
                        }
                    }
                  example: |
                    {
                        "id": "52f56f583004a2d134ddb393",
                        "name": "Astro",
                        "kind": "dog",
                        "metadata": {
                            "version": 1,
                            "createdAt": "2015-01-01T12:00:00.530+0000",
                            "modifiedAt": "2015-02-01T12:00:00.530+0000"
                        }
                    }
            304:
              headers:
                ETag:
                  description: |
                    Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

                  type: string
                  example: de305d54-75b4-431b-adb2-eb6b9e546014
                  displayName: ETag
                Cache-Control:
                  description: |
                    Activate cache and define cache behaviour through cache response directives.
                    Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                    See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

                  type: string
                  example: private, no-cache
                  displayName: Cache-Control
                Expires:
                  description: |
                    Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                    If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

                  type: date
                  example: Mon, 03 Aug 2015 17:45:57 GMT
                  displayName: Expires
              description: |
                Entity has not been modified and the version cached by the client may be used.

            400:
              description: |
                Parameter is not valid: Parameter is empty or has special characters.

              body:
                application/json:
                  example: |
                    {
                        "status": 400,
                        "message": "There are validation problems, see details section for more information",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                        "type": "validation_violation",
                        "details": [
                            {
                                "field": "Accept-Language",
                                "message": "not a language",
                                "type": "invalid_header"
                            }
                        ]
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
            401:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                Not Found. The server did not find anything matching the Request-URI.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        head:
          is:
            - allLanguages
            - metaData
            - localizedRetrieval
            - projectable
            - hybrisCurrency
          description: |
            Returns the same result as GET method but without body. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

          headers:
            hybris-currencies:
              type: string
              description: |
                Define the currency of response body. When hybris-currency is not set or is set to '*', it returns all currencies.
                When hybris-currency is set to '*', the service returns an error code of 400 with other currencies.

              example: USD,PLN,EUR
              required: false
            Accept-Language:
              type: string
              description: |
                The value of the locale identifier of the language in which the attribute should be returned.
                Provide several values separated by comma, in order to specify fallback languages.

              example: pl
              repeat: true
              required: false
            hybris-languages:
              type: string
              description: |
                Comma separated list of language identifiers for which the localization for an attribute
                should be provided.

              example: "*"
              repeat: true
              required: false
            hybris-metaData:
              type: string
              description: |
                For more information about how to use metadata, see the Metadata topic in the Details section of the Document repository documentation.

              example: kind:localized;createDate:date;idAlias:id
              required: false
            Content-Encoding:
              type: string
              description: |
                Define the content encoding used for payload. Only GZIP is supported.

              example: gzip
              required: false
            Accept-Encoding:
              type: string
              description: |
                Define the client is accepting the given content encoding.

              example: gzip
              required: false
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          queryParameters:
            fields:
              type: string
              description: |
                Contains a comma separated list of field identifiers, by which the fields of the response entities should be filtered by.
                Empty or not initialized value result in a minimal set of entity fields returned. Non-existing or invalid fields will be ignored.

              example: code,name,description
          responses:
            200:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Request succeeded.

            400:
              description: |
                Parameter is not valid: Parameter is empty or has special characters.

              body:
                application/json:
                  example: |
                    {
                        "status": 400,
                        "message": "There are validation problems, see details section for more information",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                        "type": "validation_violation",
                        "details": [
                            {
                                "field": "Accept-Language",
                                "message": "not a language",
                                "type": "invalid_header"
                            }
                        ]
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
            401:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                Not Found. The server did not find anything matching the Request-URI.

        post:
          is:
            - allLanguages
            - metaData
            - creatable
            - localizedModification
            - validated
            - updateable
            - parseJSON
          description: |
            Creates a new object of this type with a given objectId.  If the request does not contain a hybris-metaData header parameter containing information about the attribute's localization, then the data is stored as raw data.
            <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

          headers:
            Content-Language:
              type: string
              description: |
                The locale identifier of the language of the updated attribute.

              example: pl
              required: false
            hybris-metaData:
              type: string
              description: |
                For more information about how to use metadata, see the Metadata topic in the Details section of the Document repository documentation.

              example: kind:localized;createDate:date;idAlias:id
              required: false
            hybris-languages:
              type: string
              example: "*"
              required: false
            Content-Encoding:
              type: string
              description: |
                Define the content encoding used for payload. Only GZIP is supported.

              example: gzip
              required: false
            Accept-Encoding:
              type: string
              description: |
                Define the client is accepting the given content encoding.

              example: gzip
              required: false
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "description": "Properties of document you want to store."
                            }
                        ]
                    },
                    "properties": {
                        "metadata": {
                            "type": "object",
                            "properties": {
                                "version": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "schema": {
                                    "type": "string",
                                    "description": "URI to schema specified for document"
                                },
                                "mixins": {
                                    "description": "Mixins object. Keys in mixins can be constructed only from numbers, letters, hyphens and underscores.",
                                    "type": "object",
                                    "patternProperties": {
                                        "^[a-zA-Z0-9_-]*$": {
                                            "anyOf": [
                                                {
                                                    "description": "URI for mixin.",
                                                    "type": "string"
                                                },
                                                {
                                                    "description": "Inline mixin.",
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "properties": {
                                        "mixinsRoot": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        },
                        "id": {
                            "$ref": "https://api.yaas.io/patterns/v1/schema-id.json"
                        }
                    }
                }
              example: |
                {
                    "kind": {
                        "pl-pl": "pies",
                        "en": "dog"
                    },
                    "name": "Astro"
                }
          responses:
            201:
              description: |
                The request has been fulfilled and a new resource has been created.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "required": true
                            },
                            "link": {
                                "type": "string",
                                "required": true
                            }
                        }
                    }
              headers:
                Location:
                  description: |
                    URI of the created resource.

                  displayName: Location
                  type: string
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
            400:
              description: |
                Parameter is not valid: Parameter is empty or has special characters.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
                  example: |
                    {
                        "status": 400,
                        "message": "There are validation problems, see details section for more information",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                        "type": "validation_violation",
                        "details": [
                            {
                                "field": "Content-Language",
                                "message": "not a language",
                                "type": "invalid_header"
                            }
                        ]
                    }
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
            401:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            409:
              description: |
                Data modification failed. Unique index violation.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        put:
          is:
            - allLanguages
            - metaData
            - validated
            - optimistic-locking
            - partiallyUpdatable
            - patchable
            - creatableOrUpdatable
            - parseJSON
            - localizedModification
          description: |
            Updates the object for objectId and type. If you want to update partially, use **patch** query parameter instead of **partial**, because it is deprecated.
            <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

          headers:
            Content-Language:
              type: string
              description: |
                The locale identifier of the language of the updated attribute.

              example: pl
              required: false
            hybris-metaData:
              type: string
              description: |
                For more information about how to use metadata, see the Metadata topic in the Details section of the Document repository documentation.

              example: kind:localized;createDate:date;idAlias:id
              required: false
            hybris-languages:
              type: string
              example: "*"
              required: false
            Content-Encoding:
              type: string
              description: |
                Define the content encoding used for payload. Only GZIP is supported.

              example: gzip
              required: false
            Accept-Encoding:
              type: string
              description: |
                Define the client is accepting the given content encoding.

              example: gzip
              required: false
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          queryParameters:
            upsert:
              type: boolean
              description: |
                If true, it will be created if it does not already exist. Otherwise a status code of 404 is returned.
              example: true
              required: false
            patch:
              type: boolean
              description: |
                If true, a partial update will be supported, otherwise the full object replacement will be performed.

              example: true
            partial:
              type: boolean
              description: |
                If true, a partial update will be supported, otherwise the full object replacement will be performed.

              example: true
            version:
              type: integer
              description: |
                The version value.

              example: 1
              required: false
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "description": "Properties of document you want to store."
                            }
                        ]
                    },
                    "properties": {
                        "metadata": {
                            "type": "object",
                            "properties": {
                                "version": {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                "schema": {
                                    "type": "string",
                                    "description": "URI to schema specified for document"
                                },
                                "mixins": {
                                    "description": "Mixins object. Keys in mixins can be constructed only from numbers, letters, hyphens and underscores.",
                                    "type": "object",
                                    "patternProperties": {
                                        "^[a-zA-Z0-9_-]*$": {
                                            "anyOf": [
                                                {
                                                    "description": "URI for mixin.",
                                                    "type": "string"
                                                },
                                                {
                                                    "description": "Inline mixin.",
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "properties": {
                                        "mixinsRoot": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false
                                }
                            }
                        },
                        "id": {
                            "$ref": "https://api.yaas.io/patterns/v1/schema-id.json"
                        }
                    }
                }
              example: |
                {
                    "kind": {
                        "pl-pl": "kot",
                        "en": "cat",
                        "de": "katze"
                    },
                    "name": "Astro"
                }
          responses:
            200:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                The request succeeded. The information returned with the response is dependent upon the method used in the request.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "required": true
                            },
                            "status": {
                                "type": "string",
                                "required": false
                            },
                            "message": {
                                "type": "string",
                                "required": false
                            },
                            "data": {
                                "type": "string",
                                "required": false
                            }
                        }
                    }
            201:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
                Location:
                  description: |
                    URI of created resource.

                  displayName: Location
                  type: string
              description: |
                The request has been fulfilled and a new resource has been created. Returned if upsert==true and the resource did not exist.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "required": true
                            },
                            "link": {
                                "type": "string",
                                "required": true
                            }
                        }
                    }
            400:
              description: |
                Parameter is not valid: Parameter is empty or has special characters.

              body:
                application/json:
                  example: |
                    {
                        "status": 400,
                        "message": "There are validation problems, see details section for more information",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                        "type": "validation_violation",
                        "details": [
                            {
                                "field": "patch",
                                "message": "not a boolean",
                                "type": "invalid_query_parameter"
                            }
                        ]
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
            401:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                The request is about to change a non-existing resource/object.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            409:
              description: |
                Data modification failed because of a version conflict.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        delete:
          is: [ optimistic-locking ]
          description: |
            Deletes objects for objectId and type.
            <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

          headers:
            Content-Encoding:
              type: string
              description: |
                Define the content encoding used for payload. Only GZIP is supported.

              example: gzip
              required: false
            Accept-Encoding:
              type: string
              description: |
                Define the client is accepting the given content encoding.

              example: gzip
              required: false
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          queryParameters:
            version:
              type: integer
              description: |
                The version value.

              example: 1
              required: false
          responses:
            204:
              description: |
                The request succeeded.

            400:
              description: |
                Parameter is not valid: Parameter is empty or has special characters.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
            401:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                The request is about to delete a non-existing resource/object.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        /{attributeName}:
          uriParameters:
            attributeName:
              type: string
              required: true
          is: [ oauth2, contentEncodingAware ]
          post:
            is: [ optimistic-locking, validated, updateable, parseJSON ]
            description: |
              Creates an element in the array. The attribute identified by name must be an array. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for<b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.
            headers:
              Content-Encoding:
                type: string
                description: |
                  Define the content encoding used for payload. Only GZIP is supported.

                example: gzip
                required: false
              Accept-Encoding:
                type: string
                description: |
                  Define the client is accepting the given content encoding.

                example: gzip
                required: false
              Authorization:
                type: string
                description: |
                  Used to send a valid OAuth2 access token.

                example: Bearer access_token
                required: true
            queryParameters:
              version:
                type: integer
                description: |
                  The version value.

                example: 1
                required: false
            body:
              application/json:
                example: |
                  {
                      "color": "red"
                  }
            responses:
              200:
                headers:
                  Content-Encoding:
                    description: |
                      The encoding applied to the response body.

                    example: gzip
                    displayName: Content-Encoding
                    type: string
                description: |
                  The request succeeded. The information returned with the response is dependent upon the method used in the request.

                body:
                  application/json:
                    example: |
                      {
                          "name": "Astro"
                      }
              400:
                description: |
                  Parameter is not valid: Parameter is empty or has special characters.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "schema for API specified errors",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": "100",
                                  "maximum": "599"
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
                headers:
                  Content-Encoding:
                    description: |
                      The encoding applied to the response body.

                    example: gzip
                    displayName: Content-Encoding
                    type: string
              401:
                headers:
                  Content-Encoding:
                    description: |
                      The encoding applied to the response body.

                    example: gzip
                    displayName: Content-Encoding
                    type: string
                description: |
                  Given request is unauthorized. Bad or expired token. Reauthenticate
                  the user. Any details will be provided within the response payload.

                body:
                  application/json:
                    example: |
                      {
                          "status": 401,
                          "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                          "type": "insufficient_credentials",
                          "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                      }
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              403:
                headers:
                  Content-Encoding:
                    description: |
                      The encoding applied to the response body.

                    example: gzip
                    displayName: Content-Encoding
                    type: string
                description: |
                  Evaluated request scopes in access token are not sufficient and do not match required scopes.

                body:
                  application/json:
                    example: |
                      {
                          "status": 403,
                          "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                          "type": "insufficient_permissions"
                      }
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              409:
                description: |
                  Data modification failed. Unique index violation.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "schema for API specified errors",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": "100",
                                  "maximum": "599"
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
          delete:
            is: [ optimistic-locking, validated, updateable ]
            description: |
              Removes the given attribute from the document.
              <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

            headers:
              Content-Encoding:
                type: string
                description: |
                  Define the content encoding used for payload. Only GZIP is supported.

                example: gzip
                required: false
              Accept-Encoding:
                type: string
                description: |
                  Define the client is accepting the given content encoding.

                example: gzip
                required: false
              Authorization:
                type: string
                description: |
                  Used to send a valid OAuth2 access token.

                example: Bearer access_token
                required: true
            queryParameters:
              version:
                type: integer
                description: |
                  The version value.

                example: 1
                required: false
            responses:
              204:
                description: |
                  The request succeeded.

              400:
                description: |
                  Parameter is not valid: Parameter is empty or has special characters.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "schema for API specified errors",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": "100",
                                  "maximum": "599"
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
                headers:
                  Content-Encoding:
                    description: |
                      The encoding applied to the response body.

                    example: gzip
                    displayName: Content-Encoding
                    type: string
              401:
                headers:
                  Content-Encoding:
                    description: |
                      The encoding applied to the response body.

                    example: gzip
                    displayName: Content-Encoding
                    type: string
                description: |
                  Given request is unauthorized. Bad or expired token. Reauthenticate
                  the user. Any details will be provided within the response payload.

                body:
                  application/json:
                    example: |
                      {
                          "status": 401,
                          "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                          "type": "insufficient_credentials",
                          "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                      }
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              403:
                headers:
                  Content-Encoding:
                    description: |
                      The encoding applied to the response body.

                    example: gzip
                    displayName: Content-Encoding
                    type: string
                description: |
                  Evaluated request scopes in access token are not sufficient and do not match required scopes.

                body:
                  application/json:
                    example: |
                      {
                          "status": 403,
                          "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                          "type": "insufficient_permissions"
                      }
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "Schema for API specified errors.",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": 100,
                                  "maximum": 599
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[a-z_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
              409:
                description: |
                  Data modification failed. Unique index violation.

                body:
                  application/json:
                    schema: |
                      {
                          "$schema": "http://json-schema.org/draft-04/schema#",
                          "title": "error",
                          "description": "schema for API specified errors",
                          "type": "object",
                          "properties": {
                              "status": {
                                  "type": "integer",
                                  "description": "original HTTP error code, should be consistent with the response HTTP code",
                                  "minimum": "100",
                                  "maximum": "599"
                              },
                              "type": {
                                  "type": "string",
                                  "description": "classification of the error type, lower case with underscore eg validation_failure",
                                  "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                              },
                              "message": {
                                  "type": "string",
                                  "description": "descriptive error message for debugging"
                              },
                              "moreInfo": {
                                  "type": "string",
                                  "format": "uri",
                                  "description": "link to documentation to investigate further and finding support"
                              },
                              "details": {
                                  "type": "array",
                                  "description": "list of problems causing this error",
                                  "items": {
                                      "$schema": "http://json-schema.org/draft-04/schema#",
                                      "title": "errorDetail",
                                      "description": "schema for specific error cause",
                                      "type": "object",
                                      "properties": {
                                          "field": {
                                              "type": "string",
                                              "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                          },
                                          "type": {
                                              "type": "string",
                                              "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                          },
                                          "message": {
                                              "type": "string",
                                              "description": "descriptive error detail message for debugging"
                                          },
                                          "moreInfo": {
                                              "type": "string",
                                              "format": "uri",
                                              "description": "link to documentation to investigate further and finding support for error detail"
                                          }
                                      },
                                      "required": [
                                          "type"
                                      ]
                                  }
                              }
                          },
                          "required": [
                              "status",
                              "type"
                          ]
                      }
          /{index}:
            uriParameters:
              index:
                type: number
                description: The index of the array element.
                required: true
            is: [ oauth2, contentEncodingAware, validated ]
            get:
              is: [ cacheable, contentCacheable ]
              description: |
                Gets the element at this index from the array.
                <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

              headers:
                If-None-Match:
                  type: string
                  description: |
                    This header requests to return resource if it does not match the given ETag. If the entity does match the provided ETag
                    then HTTP 304 Not Modified status will be returned instead of requested resource.

                  example: de305d54-75b4-431b-adb2-eb6b9e546014
                  required: false
                Content-Encoding:
                  type: string
                  description: |
                    Define the content encoding used for payload. Only GZIP is supported.

                  example: gzip
                  required: false
                Accept-Encoding:
                  type: string
                  description: |
                    Define the client is accepting the given content encoding.

                  example: gzip
                  required: false
                Authorization:
                  type: string
                  description: |
                    Used to send a valid OAuth2 access token.

                  example: Bearer access_token
                  required: true
              responses:
                200:
                  headers:
                    ETag:
                      description: |
                        Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

                      type: string
                      example: de305d54-75b4-431b-adb2-eb6b9e546014
                      displayName: ETag
                    Cache-Control:
                      description: |
                        Activate cache and define cache behaviour through cache response directives.
                        Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                        See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

                      type: string
                      example: private, no-cache
                      displayName: Cache-Control
                    Expires:
                      description: |
                        Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                        If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

                      type: date
                      example: Mon, 03 Aug 2015 17:45:57 GMT
                      displayName: Expires
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    Array element.

                  body:
                    application/json:
                      example: |
                        {
                            "name": "Astro"
                        }
                304:
                  headers:
                    ETag:
                      description: |
                        Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

                      type: string
                      example: de305d54-75b4-431b-adb2-eb6b9e546014
                      displayName: ETag
                    Cache-Control:
                      description: |
                        Activate cache and define cache behaviour through cache response directives.
                        Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                        See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

                      type: string
                      example: private, no-cache
                      displayName: Cache-Control
                    Expires:
                      description: |
                        Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                        If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

                      type: date
                      example: Mon, 03 Aug 2015 17:45:57 GMT
                      displayName: Expires
                  description: |
                    Entity has not been modified and the version cached by the client may be used.

                400:
                  description: |
                    Parameter is not valid: Parameter is empty or has special characters.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "schema for API specified errors",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": "100",
                                    "maximum": "599"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                401:
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    Given request is unauthorized. Bad or expired token. Reauthenticate
                    the user. Any details will be provided within the response payload.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 401,
                            "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                            "type": "insufficient_credentials",
                            "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                403:
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    Evaluated request scopes in access token are not sufficient and do not match required scopes.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 403,
                            "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                            "type": "insufficient_permissions"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
            head:
              description: |
                Returns the same result as GET method but without body. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

              headers:
                Content-Encoding:
                  type: string
                  description: |
                    Define the content encoding used for payload. Only GZIP is supported.

                  example: gzip
                  required: false
                Accept-Encoding:
                  type: string
                  description: |
                    Define the client is accepting the given content encoding.

                  example: gzip
                  required: false
                Authorization:
                  type: string
                  description: |
                    Used to send a valid OAuth2 access token.

                  example: Bearer access_token
                  required: true
              responses:
                200:
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    Array element.

                400:
                  description: |
                    Parameter is not valid: Parameter is empty or has special characters.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "schema for API specified errors",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": "100",
                                    "maximum": "599"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                401:
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    Given request is unauthorized. Bad or expired token. Reauthenticate
                    the user. Any details will be provided within the response payload.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 401,
                            "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                            "type": "insufficient_credentials",
                            "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                403:
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    Evaluated request scopes in access token are not sufficient and do not match required scopes.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 403,
                            "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                            "type": "insufficient_permissions"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
            put:
              is: [ optimistic-locking, updateable, compactable, parseJSON ]
              description: |
                Updates the element at this index in the array.
                <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

              headers:
                Content-Encoding:
                  type: string
                  description: |
                    Define the content encoding used for payload. Only GZIP is supported.

                  example: gzip
                  required: false
                Accept-Encoding:
                  type: string
                  description: |
                    Define the client is accepting the given content encoding.

                  example: gzip
                  required: false
                Authorization:
                  type: string
                  description: |
                    Used to send a valid OAuth2 access token.

                  example: Bearer access_token
                  required: true
              queryParameters:
                compact:
                  type: boolean
                  description: |
                    If true, then a shrink operation will be performed. Default is false.

                  example: true
                  required: false
                version:
                  type: integer
                  description: |
                    The version value.

                  example: 1
                  required: false
              body:
                application/json:
                  example: |
                    {
                        "color": "red"
                    }
              responses:
                200:
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    The request succeeded. The information returned with the response is dependent upon the method used in the request.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "required": true
                                },
                                "status": {
                                    "type": "string",
                                    "required": false
                                },
                                "message": {
                                    "type": "string",
                                    "required": false
                                },
                                "data": {
                                    "type": "string",
                                    "required": false
                                }
                            }
                        }
                400:
                  description: |
                    Parameter is not valid: Parameter is empty or has special characters.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "schema for API specified errors",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": "100",
                                    "maximum": "599"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                401:
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    Given request is unauthorized. Bad or expired token. Reauthenticate
                    the user. Any details will be provided within the response payload.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 401,
                            "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                            "type": "insufficient_credentials",
                            "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                403:
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    Evaluated request scopes in access token are not sufficient and do not match required scopes.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 403,
                            "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                            "type": "insufficient_permissions"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                404:
                  description: |
                    Not Found. The server did not find anything matching the Request-URI.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "schema for API specified errors",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": "100",
                                    "maximum": "599"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                409:
                  description: |
                    Data modification failed. Unique index violation.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "schema for API specified errors",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": "100",
                                    "maximum": "599"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
            delete:
              is: [ optimistic-locking, updateable, compactable ]
              description: |
                Deletes the element at this index from the array.
                <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

              headers:
                Content-Encoding:
                  type: string
                  description: |
                    Define the content encoding used for payload. Only GZIP is supported.

                  example: gzip
                  required: false
                Accept-Encoding:
                  type: string
                  description: |
                    Define the client is accepting the given content encoding.

                  example: gzip
                  required: false
                Authorization:
                  type: string
                  description: |
                    Used to send a valid OAuth2 access token.

                  example: Bearer access_token
                  required: true
              queryParameters:
                compact:
                  type: boolean
                  description: |
                    If true, then a shrink operation will be performed. Default is false.

                  example: true
                  required: false
                version:
                  type: integer
                  description: |
                    The version value.

                  example: 1
                  required: false
              responses:
                204:
                  description: |
                    The request succeeded.

                400:
                  description: |
                    Parameter is not valid: Parameter is empty or has special characters.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "schema for API specified errors",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": "100",
                                    "maximum": "599"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                401:
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    Given request is unauthorized. Bad or expired token. Reauthenticate
                    the user. Any details will be provided within the response payload.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 401,
                            "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                            "type": "insufficient_credentials",
                            "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                403:
                  headers:
                    Content-Encoding:
                      description: |
                        The encoding applied to the response body.

                      example: gzip
                      displayName: Content-Encoding
                      type: string
                  description: |
                    Evaluated request scopes in access token are not sufficient and do not match required scopes.

                  body:
                    application/json:
                      example: |
                        {
                            "status": 403,
                            "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                            "type": "insufficient_permissions"
                        }
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "Schema for API specified errors.",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": 100,
                                    "maximum": 599
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[a-z_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
                409:
                  description: |
                    Data modification failed. Unique index violation.

                  body:
                    application/json:
                      schema: |
                        {
                            "$schema": "http://json-schema.org/draft-04/schema#",
                            "title": "error",
                            "description": "schema for API specified errors",
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "description": "original HTTP error code, should be consistent with the response HTTP code",
                                    "minimum": "100",
                                    "maximum": "599"
                                },
                                "type": {
                                    "type": "string",
                                    "description": "classification of the error type, lower case with underscore eg validation_failure",
                                    "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "descriptive error message for debugging"
                                },
                                "moreInfo": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "link to documentation to investigate further and finding support"
                                },
                                "details": {
                                    "type": "array",
                                    "description": "list of problems causing this error",
                                    "items": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "errorDetail",
                                        "description": "schema for specific error cause",
                                        "type": "object",
                                        "properties": {
                                            "field": {
                                                "type": "string",
                                                "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                            },
                                            "type": {
                                                "type": "string",
                                                "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                            },
                                            "message": {
                                                "type": "string",
                                                "description": "descriptive error detail message for debugging"
                                            },
                                            "moreInfo": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "link to documentation to investigate further and finding support for error detail"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "status",
                                "type"
                            ]
                        }
/{tenant}/{client}/aggr:
  uriParameters:
    tenant:
      type: string
      description: |
        The tenant string is the project's Identifier from the Builder.

      required: true
    client:
      type: string
      required: true
  /{type}:
    uriParameters:
      type:
        type: string
        required: true
    is: [ oauth2, contentEncodingAware ]
    head:
      description: |
        Returns the count of objects of this type. Additionally, objects can be filtered by a query. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

      headers:
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        200:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
            hybris-count:
              description: |
                The number of found objects.

              type: integer
              example: 100
              displayName: hybris-count
          description: |
            Operation successful. Result is in the header.

        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    get:
      is: [ cacheable, contentCacheable ]
      description: |
        Returns the result of aggregations for objects of this type. At least one of sum or avg query parameters is required.
        Additionally, the q parameter can be used to restrict the number of input objects.
        <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.

      headers:
        If-None-Match:
          type: string
          description: |
            This header requests to return resource if it does not match the given ETag. If the entity does match the provided ETag
            then HTTP 304 Not Modified status will be returned instead of requested resource.

          example: de305d54-75b4-431b-adb2-eb6b9e546014
          required: false
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      queryParameters:
        sum:
          type: string
          description: |
            Defines the attributes that should be summed. Attributes are comma-separated.

          example: price,age,weight
          required: false
        avg:
          type: string
          description: |
            Defines the attributes to calculate their average value. Attributes are comma- separated.

          example: age,weight
          required: false
        count:
          type: boolean
          description: |
            Defines that the result should return a records count.

          example: true
          required: false
      responses:
        200:
          headers:
            ETag:
              description: |
                Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

              type: string
              example: de305d54-75b4-431b-adb2-eb6b9e546014
              displayName: ETag
            Cache-Control:
              description: |
                Activate cache and define cache behaviour through cache response directives.
                Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

              type: string
              example: private, no-cache
              displayName: Cache-Control
            Expires:
              description: |
                Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

              type: date
              example: Mon, 03 Aug 2015 17:45:57 GMT
              displayName: Expires
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Returns the result of the aggregation.

          body:
            application/json:
              example: |
                {
                  sum : {
                    price : 1000,
                    value : 250
                  },
                  avg : {
                    weight : 23.5,
                    height: 177.7
                  },
                  count : 30
                }

        304:
          headers:
            ETag:
              description: |
                Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

              type: string
              example: de305d54-75b4-431b-adb2-eb6b9e546014
              displayName: ETag
            Cache-Control:
              description: |
                Activate cache and define cache behaviour through cache response directives.
                Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

              type: string
              example: private, no-cache
              displayName: Cache-Control
            Expires:
              description: |
                Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

              type: date
              example: Mon, 03 Aug 2015 17:45:57 GMT
              displayName: Expires
          description: |
            Entity has not been modified and the version cached by the client may be used.

        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
/{tenant}/{client}/indexes:
  uriParameters:
    tenant:
      type: string
      description: |
        The tenant string is the project's Identifier from the Builder.

      required: true
    client:
      type: string
      required: true
  /{type}:
    uriParameters:
      type:
        type: string
        required: true
    is: [ oauth2, contentEncodingAware ]
    get:
      is: [ cacheable, contentCacheable ]
      description: |
        Returns all indexes created for a collection. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.
      headers:
        If-None-Match:
          type: string
          description: |
            This header requests to return resource if it does not match the given ETag. If the entity does match the provided ETag
            then HTTP 304 Not Modified status will be returned instead of requested resource.

          example: de305d54-75b4-431b-adb2-eb6b9e546014
          required: false
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        200:
          headers:
            ETag:
              description: |
                Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

              type: string
              example: de305d54-75b4-431b-adb2-eb6b9e546014
              displayName: ETag
            Cache-Control:
              description: |
                Activate cache and define cache behaviour through cache response directives.
                Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

              type: string
              example: private, no-cache
              displayName: Cache-Control
            Expires:
              description: |
                Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

              type: date
              example: Mon, 03 Aug 2015 17:45:57 GMT
              displayName: Expires
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: Array with indexes.
          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "description": "array with indexes",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "integer",
                                    "minimum": -1,
                                    "maximum": 1
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "unique": {
                                "type": "boolean"
                            },
                            "sparse": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "key",
                            "name"
                        ]
                    }
                }
              example: |
                [
                    {
                        "key": {
                            "left": -1,
                            "right": 1
                        },
                        "name": "MyIndex"
                    },
                    {
                        "key": {
                            "_id": 1
                        },
                        "name": "_id_"
                    }
                ]
        304:
          headers:
            ETag:
              description: |
                Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

              type: string
              example: de305d54-75b4-431b-adb2-eb6b9e546014
              displayName: ETag
            Cache-Control:
              description: |
                Activate cache and define cache behaviour through cache response directives.
                Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

              type: string
              example: private, no-cache
              displayName: Cache-Control
            Expires:
              description: |
                Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

              type: date
              example: Mon, 03 Aug 2015 17:45:57 GMT
              displayName: Expires
          description: |
            Entity has not been modified and the version cached by the client may be used.

        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    head:
      description: |
        Returns the same result as GET method but without body. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.
      headers:
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        200:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: Array with indexes.
        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    post:
      is: [ validated, creatable, updateable ]
      description: |
        Creates a new index. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.
      headers:
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      body:
        application/json:
          schema: |
            {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "description": "input to create index",
                "type": "object",
                "properties": {
                    "keys": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "minimum": -1,
                            "maximum": 1
                        }
                    },
                    "options": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "unique": {
                                "type": "boolean"
                            },
                            "sparse": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "additionalProperties": false,
                "required": [
                    "keys"
                ]
            }
          example: |
            {
                "keys": {
                    "left": -1,
                    "right": 1
                },
                "options": {
                    "name": "MyIndex"
                }
            }
      responses:
        201:
          description: |
            The request has been fulfilled and a new resource has been created.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "required": true
                        },
                        "link": {
                            "type": "string",
                            "required": true
                        }
                    }
                }
          headers:
            Location:
              description: |
                URI of the created resource.

              displayName: Location
              type: string
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
        400:
          description: |
            Parameter is not valid: Parameter is empty or has special characters.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "schema for API specified errors",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": "100",
                            "maximum": "599"
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        409:
          description: |
            Data modification failed. Unique index violation.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "schema for API specified errors",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": "100",
                            "maximum": "599"
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    delete:
      is: [ validated ]
      description: |
        Deletes all indexes for this type. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.
      headers:
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      responses:
        204:
          description: Resources have been deleted.
        400:
          description: |
            Parameter is not valid: Parameter is empty or has special characters.

          body:
            application/json:
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "schema for API specified errors",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": "100",
                            "maximum": "599"
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    /{name}:
      uriParameters:
        name:
          type: string
          required: true
      is: [ oauth2, contentEncodingAware ]
      get:
        is: [ cacheable, contentCacheable ]
        description: |
          Returns the index identified by the given name. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.
        headers:
          If-None-Match:
            type: string
            description: |
              This header requests to return resource if it does not match the given ETag. If the entity does match the provided ETag
              then HTTP 304 Not Modified status will be returned instead of requested resource.

            example: de305d54-75b4-431b-adb2-eb6b9e546014
            required: false
          Content-Encoding:
            type: string
            description: |
              Define the content encoding used for payload. Only GZIP is supported.

            example: gzip
            required: false
          Accept-Encoding:
            type: string
            description: |
              Define the client is accepting the given content encoding.

            example: gzip
            required: false
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        responses:
          200:
            headers:
              ETag:
                description: |
                  Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

                type: string
                example: de305d54-75b4-431b-adb2-eb6b9e546014
                displayName: ETag
              Cache-Control:
                description: |
                  Activate cache and define cache behaviour through cache response directives.
                  Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                  See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

                type: string
                example: private, no-cache
                displayName: Cache-Control
              Expires:
                description: |
                  Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                  If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

                type: date
                example: Mon, 03 Aug 2015 17:45:57 GMT
                displayName: Expires
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: Indexes.
            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "description": "index definition",
                      "type": "object",
                      "properties": {
                          "key": {
                              "type": "object",
                              "additionalProperties": {
                                  "type": "integer",
                                  "minimum": -1,
                                  "maximum": 1
                              }
                          },
                          "name": {
                              "type": "string"
                          },
                          "unique": {
                              "type": "boolean"
                          },
                          "sparse": {
                              "type": "boolean"
                          }
                      },
                      "required": [
                          "key",
                          "name"
                      ]
                  }
                example: |
                  {
                      "key": {
                          "left": -1,
                          "right": 1
                      },
                      "name": "MyIndex"
                  }
          304:
            headers:
              ETag:
                description: |
                  Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

                type: string
                example: de305d54-75b4-431b-adb2-eb6b9e546014
                displayName: ETag
              Cache-Control:
                description: |
                  Activate cache and define cache behaviour through cache response directives.
                  Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                  See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

                type: string
                example: private, no-cache
                displayName: Cache-Control
              Expires:
                description: |
                  Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                  If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

                type: date
                example: Mon, 03 Aug 2015 17:45:57 GMT
                displayName: Expires
            description: |
              Entity has not been modified and the version cached by the client may be used.

          401:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          404:
            description: |
              Not Found. The server has not found anything matching the Request-URI.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "schema for API specified errors",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": "100",
                              "maximum": "599"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
      head:
        is: [ cacheable, contentCacheable ]
        description: |
          Returns the same result as GET method but without body. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_view</b> scope to manage this resource.
        headers:
          If-None-Match:
            type: string
            description: |
              This header requests to return resource if it does not match the given ETag. If the entity does match the provided ETag
              then HTTP 304 Not Modified status will be returned instead of requested resource.

            example: de305d54-75b4-431b-adb2-eb6b9e546014
            required: false
          Content-Encoding:
            type: string
            description: |
              Define the content encoding used for payload. Only GZIP is supported.

            example: gzip
            required: false
          Accept-Encoding:
            type: string
            description: |
              Define the client is accepting the given content encoding.

            example: gzip
            required: false
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
        responses:
          200:
            headers:
              ETag:
                description: |
                  Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

                type: string
                example: de305d54-75b4-431b-adb2-eb6b9e546014
                displayName: ETag
              Cache-Control:
                description: |
                  Activate cache and define cache behaviour through cache response directives.
                  Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                  See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

                type: string
                example: private, no-cache
                displayName: Cache-Control
              Expires:
                description: |
                  Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                  If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

                type: date
                example: Mon, 03 Aug 2015 17:45:57 GMT
                displayName: Expires
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: Indexes.
          304:
            headers:
              ETag:
                description: |
                  Entity Tag header containing a calculated tag (e.g. hash function.) which could be used for subsequent calls

                type: string
                example: de305d54-75b4-431b-adb2-eb6b9e546014
                displayName: ETag
              Cache-Control:
                description: |
                  Activate cache and define cache behaviour through cache response directives.
                  Usually defines if it's public or private (cacheable by proxy or not) and max-age for resource or no-cache.
                  See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html for more information.

                type: string
                example: private, no-cache
                displayName: Cache-Control
              Expires:
                description: |
                  Sets a date in RFC 1123 format from which the cached resource should no longer be considered valid.
                  If both the Expires header and max-age in the Cache-Control header are set, max-age will take precedence.

                type: date
                example: Mon, 03 Aug 2015 17:45:57 GMT
                displayName: Expires
            description: |
              Entity has not been modified and the version cached by the client may be used.

          401:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          403:
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
          404:
            description: |
              Not Found. The server has not found anything matching the Request-URI.

      delete:
        is: [ oauth2, validated ]
        description: |
          Deletes an index by the given name. <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.
        headers:
          Authorization:
            type: string
            description: |
              Used to send a valid OAuth2 access token.

            example: Bearer access_token
            required: true
          Content-Encoding:
            type: string
            description: |
              Define the content encoding used for payload. Only GZIP is supported.

            example: gzip
            required: false
          Accept-Encoding:
            type: string
            description: |
              Define the client is accepting the given content encoding.

            example: gzip
            required: false
        responses:
          204:
            description: Resource has been deleted.
          400:
            description: |
              Parameter is not valid: Parameter is empty or has special characters.

            body:
              application/json:
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "schema for API specified errors",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": "100",
                              "maximum": "599"
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
          401:
            description: |
              Given request is unauthorized. Bad or expired token. Reauthenticate
              the user. Any details will be provided within the response payload.

            body:
              application/json:
                example: |
                  {
                      "status": 401,
                      "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                      "type": "insufficient_credentials",
                      "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
          403:
            description: |
              Evaluated request scopes in access token are not sufficient and do not match required scopes.

            body:
              application/json:
                example: |
                  {
                      "status": 403,
                      "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                      "type": "insufficient_permissions"
                  }
                schema: |
                  {
                      "$schema": "http://json-schema.org/draft-04/schema#",
                      "title": "error",
                      "description": "Schema for API specified errors.",
                      "type": "object",
                      "properties": {
                          "status": {
                              "type": "integer",
                              "description": "original HTTP error code, should be consistent with the response HTTP code",
                              "minimum": 100,
                              "maximum": 599
                          },
                          "type": {
                              "type": "string",
                              "description": "classification of the error type, lower case with underscore eg validation_failure",
                              "pattern": "[a-z]+[a-z_]*[a-z]+"
                          },
                          "message": {
                              "type": "string",
                              "description": "descriptive error message for debugging"
                          },
                          "moreInfo": {
                              "type": "string",
                              "format": "uri",
                              "description": "link to documentation to investigate further and finding support"
                          },
                          "details": {
                              "type": "array",
                              "description": "list of problems causing this error",
                              "items": {
                                  "$schema": "http://json-schema.org/draft-04/schema#",
                                  "title": "errorDetail",
                                  "description": "schema for specific error cause",
                                  "type": "object",
                                  "properties": {
                                      "field": {
                                          "type": "string",
                                          "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                      },
                                      "type": {
                                          "type": "string",
                                          "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                          "pattern": "[a-z]+[a-z_]*[a-z]+"
                                      },
                                      "message": {
                                          "type": "string",
                                          "description": "descriptive error detail message for debugging"
                                      },
                                      "moreInfo": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "link to documentation to investigate further and finding support for error detail"
                                      }
                                  },
                                  "required": [
                                      "type"
                                  ]
                              }
                          }
                      },
                      "required": [
                          "status",
                          "type"
                      ]
                  }
            headers:
              Content-Encoding:
                description: |
                  The encoding applied to the response body.

                example: gzip
                displayName: Content-Encoding
                type: string
/{tenant}/{client}/tags:
  uriParameters:
    tenant:
      type: string
      description: |
        The tenant string is the project's Identifier from the Builder.

      required: true
    client:
      type: string
      required: true
  /{type}:
    uriParameters:
      type:
        type: string
        required: true
    is: [ oauth2, contentEncodingAware ]
    post:
      is: [ queryable ]
      description: |
        Add a value to the tag for all documents of the given type and supplied restrictions (q param).
        <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

      headers:
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      queryParameters:
        q:
          type: string
          description: |
            The simple query criteria based on available fields to limit returned results or a set of modified documents.

          example: |
            species:dog name:"Clifford"

          required: false
        tags:
          type: string
          description: |
            Name of the tags to which to add values. Values are separated with commas after a colon.

          example: roles:ROLE1, ANOTHER_ROLE
          required: true
      responses:
        200:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: The request succeeded.
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "q",
                            "message": "not a valid query",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    delete:
      is: [ queryable ]
      description: |
        Delete the value from the tag for all documents of the given type and supplied restrictions (q param).
        <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

      headers:
        Content-Encoding:
          type: string
          description: |
            Define the content encoding used for payload. Only GZIP is supported.

          example: gzip
          required: false
        Accept-Encoding:
          type: string
          description: |
            Define the client is accepting the given content encoding.

          example: gzip
          required: false
        Authorization:
          type: string
          description: |
            Used to send a valid OAuth2 access token.

          example: Bearer access_token
          required: true
      queryParameters:
        q:
          type: string
          description: |
            The simple query criteria based on available fields to limit returned results or a set of modified documents.

          example: |
            species:dog name:"Clifford"

          required: false
        tags:
          type: string
          description: |
            Name of tags from which to remove values. Values are separated with commas after a colon.

          example: roles:ROLE1, THIRD_ROLE
          required: true
        removeEmpty:
          type: boolean
          description: |
            Flag to control if the empty tag attribute should be removed from the document.

          example: false
          required: false
      responses:
        204:
          description: The request succeeded. No content in the response.
        400:
          description: |
            Request syntactically incorrect. Any details will be provided within the response payload.
          body:
            application/json:
              example: |
                {
                    "status": 400,
                    "message": "There are validation problems, see details section for more information",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html",
                    "type": "validation_violation",
                    "details": [
                        {
                            "field": "q",
                            "message": "not a valid query",
                            "type": "invalid_query_parameter"
                        }
                    ]
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
        401:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Given request is unauthorized. Bad or expired token. Reauthenticate
            the user. Any details will be provided within the response payload.

          body:
            application/json:
              example: |
                {
                    "status": 401,
                    "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                    "type": "insufficient_credentials",
                    "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
        403:
          headers:
            Content-Encoding:
              description: |
                The encoding applied to the response body.

              example: gzip
              displayName: Content-Encoding
              type: string
          description: |
            Evaluated request scopes in access token are not sufficient and do not match required scopes.

          body:
            application/json:
              example: |
                {
                    "status": 403,
                    "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                    "type": "insufficient_permissions"
                }
              schema: |
                {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "error",
                    "description": "Schema for API specified errors.",
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "integer",
                            "description": "original HTTP error code, should be consistent with the response HTTP code",
                            "minimum": 100,
                            "maximum": 599
                        },
                        "type": {
                            "type": "string",
                            "description": "classification of the error type, lower case with underscore eg validation_failure",
                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                        },
                        "message": {
                            "type": "string",
                            "description": "descriptive error message for debugging"
                        },
                        "moreInfo": {
                            "type": "string",
                            "format": "uri",
                            "description": "link to documentation to investigate further and finding support"
                        },
                        "details": {
                            "type": "array",
                            "description": "list of problems causing this error",
                            "items": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "errorDetail",
                                "description": "schema for specific error cause",
                                "type": "object",
                                "properties": {
                                    "field": {
                                        "type": "string",
                                        "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                        "pattern": "[a-z]+[a-z_]*[a-z]+"
                                    },
                                    "message": {
                                        "type": "string",
                                        "description": "descriptive error detail message for debugging"
                                    },
                                    "moreInfo": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "link to documentation to investigate further and finding support for error detail"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "status",
                        "type"
                    ]
                }
    /{id}:
      uriParameters:
        id:
          type: string
          required: true
      /{tagName}:
        uriParameters:
          tagName:
            type: string
            required: true
        is:
          - oauth2
          - contentEncodingAware
          - validated
          - optimistic-locking
          - updateable
        post:
          is: [ validated, optimistic-locking, updateable ]
          description: |
            Append several values to an array at once.
            Values are added only if they are not already in the array.
            <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

          headers:
            Content-Encoding:
              type: string
              description: |
                Define the content encoding used for payload. Only GZIP is supported.

              example: gzip
              required: false
            Accept-Encoding:
              type: string
              description: |
                Define the client is accepting the given content encoding.

              example: gzip
              required: false
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          queryParameters:
            version:
              type: integer
              description: |
                The version value.

              example: 1
              required: false
            tags:
              type: string
              description: |
                Defines the values that should be appended to the array. Values are comma- separated.

              example: comic, paper, history
              required: true
          responses:
            200:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: The request succeeded.
            400:
              description: |
                Parameter is not valid: Parameter is empty or has special characters.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
            401:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                There is no object with the given ID.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            409:
              description: |
                Data modification failed. Unique index violation.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
        delete:
          description: |
            Removes values from the tags array.
            <br/> <br/> **Security / Access Control:** <br/>To access this method, access token must be issued for <b>client</b> and have <b>hybris.document_manage</b> scope to manage this resource.

          headers:
            Content-Encoding:
              type: string
              description: |
                Define the content encoding used for payload. Only GZIP is supported.

              example: gzip
              required: false
            Accept-Encoding:
              type: string
              description: |
                Define the client is accepting the given content encoding.

              example: gzip
              required: false
            Authorization:
              type: string
              description: |
                Used to send a valid OAuth2 access token.

              example: Bearer access_token
              required: true
          queryParameters:
            version:
              type: integer
              description: |
                The version value.

              example: 1
              required: false
            tags:
              type: string
              description: |
                Defines the values that should be deleted from the array. Values are comma- separated.

              example: comic, history
              required: true
            removeEmpty:
              type: boolean
              description: |
                Flag to control if empty tag attributes should be removed from the document.

              example: false
              required: false
          responses:
            204:
              description: The request succeeded.
            400:
              description: |
                Parameter is not valid: Parameter is empty or has special characters.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
            401:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Given request is unauthorized. Bad or expired token. Reauthenticate
                the user. Any details will be provided within the response payload.

              body:
                application/json:
                  example: |
                    {
                        "status": 401,
                        "message": "Authorization: Unauthorized. Bearer TOKEN is invalid",
                        "type": "insufficient_credentials",
                        "moreInfo": "https://api.yaas.io/patterns/errortypes.html"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            403:
              headers:
                Content-Encoding:
                  description: |
                    The encoding applied to the response body.

                  example: gzip
                  displayName: Content-Encoding
                  type: string
              description: |
                Evaluated request scopes in access token are not sufficient and do not match required scopes.

              body:
                application/json:
                  example: |
                    {
                        "status": 403,
                        "message": "Given request does not have required scopes in access token. It is not authorized to perform this operation.",
                        "type": "insufficient_permissions"
                    }
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "Schema for API specified errors.",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": 100,
                                "maximum": 599
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[a-z_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[a-z_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            404:
              description: |
                There is no object with the given ID.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
            409:
              description: |
                Data modification failed. Unique index violation.

              body:
                application/json:
                  schema: |
                    {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "title": "error",
                        "description": "schema for API specified errors",
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "integer",
                                "description": "original HTTP error code, should be consistent with the response HTTP code",
                                "minimum": "100",
                                "maximum": "599"
                            },
                            "type": {
                                "type": "string",
                                "description": "classification of the error type, lower case with underscore eg validation_failure",
                                "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                            },
                            "message": {
                                "type": "string",
                                "description": "descriptive error message for debugging"
                            },
                            "moreInfo": {
                                "type": "string",
                                "format": "uri",
                                "description": "link to documentation to investigate further and finding support"
                            },
                            "details": {
                                "type": "array",
                                "description": "list of problems causing this error",
                                "items": {
                                    "$schema": "http://json-schema.org/draft-04/schema#",
                                    "title": "errorDetail",
                                    "description": "schema for specific error cause",
                                    "type": "object",
                                    "properties": {
                                        "field": {
                                            "type": "string",
                                            "description": "a bean notation expression specifying the element in request data causing the error, eg product.variants[3].name, this can be empty if violation was not field specific"
                                        },
                                        "type": {
                                            "type": "string",
                                            "description": "classification of the error detail type, lower case with underscore eg missing_value, this value must be always interpreted in context of the general error type.",
                                            "pattern": "[a-z]+[[a-z]_]*[a-z]+"
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "descriptive error detail message for debugging"
                                        },
                                        "moreInfo": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "link to documentation to investigate further and finding support for error detail"
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "status",
                            "type"
                        ]
                    }
